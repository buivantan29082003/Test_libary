/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import Dao.DocGiaDao;
import Dao.PhieuMuonDao;
import Dao.ThongKeDao;
import Entity.DocGia;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.DataFormat;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.jfree.ui.HorizontalAlignment;
import org.jfree.ui.VerticalAlignment;
import utils.MsgBox;

/**
 *
 * @author duyvo
 */
public class ThongKe extends javax.swing.JPanel {
  ThongKeDao tkdao = new ThongKeDao();
    DocGiaDao dgdao = new DocGiaDao();
    PhieuMuonDao pmdao = new PhieuMuonDao();

    /**
     * Creates new form ThongKe
     */
    public ThongKe() {
        initComponents();
        init();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        header = new component.menu_1();
        QLNhanVIen = new javax.swing.JLabel();
        lblDongHo = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTacGia = new javax.swing.JTable();
        myButton20 = new button.MyButton();
        myButton21 = new button.MyButton();
        myButton22 = new button.MyButton();
        jPanel3 = new javax.swing.JPanel();
        myButton19 = new button.MyButton();
        cboLop = new button.combobox.Combobox();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblNam = new javax.swing.JTable();
        myButton23 = new button.MyButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblNXB = new javax.swing.JTable();
        myButton16 = new button.MyButton();
        myButton17 = new button.MyButton();
        myButton24 = new button.MyButton();
        jPanel5 = new javax.swing.JPanel();
        myButton14 = new button.MyButton();
        myButton15 = new button.MyButton();
        cboThang = new button.combobox.Combobox();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblSINHVIEN = new javax.swing.JTable();
        myButton25 = new button.MyButton();

        main.setBackground(new java.awt.Color(255, 204, 204));

        QLNhanVIen.setBackground(new java.awt.Color(102, 102, 102));
        QLNhanVIen.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        QLNhanVIen.setForeground(new java.awt.Color(255, 255, 255));
        QLNhanVIen.setText("Thống kê");
        QLNhanVIen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                QLNhanVIenMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                QLNhanVIenMouseExited(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(QLNhanVIen)
                .addContainerGap(456, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(QLNhanVIen)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        lblDongHo.setText("Đồng hồ");

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        tblTacGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tác giả", "Số lượng"
            }
        ));
        jScrollPane1.setViewportView(tblTacGia);

        myButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-bar-chart-alt-2.png"))); // NOI18N
        myButton20.setRadius(10);
        myButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton20ActionPerformed(evt);
            }
        });

        myButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/grow-up (3).png"))); // NOI18N
        myButton21.setRadius(10);
        myButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton21ActionPerformed(evt);
            }
        });

        myButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/excel.png"))); // NOI18N
        myButton22.setRadius(10);
        myButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton22ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(myButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(myButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(myButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 893, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(myButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("Thống kê theo Tác giả", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setForeground(new java.awt.Color(255, 204, 204));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        myButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pie-chart-alt-2-regular-24.png"))); // NOI18N
        myButton19.setRadius(10);
        myButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton19ActionPerformed(evt);
            }
        });
        jPanel3.add(myButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 430, 159, 35));

        cboLop.setEditable(true);
        cboLop.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "12C7", "12C6", "12C5", "12C4", "12C3", "12C2", "12C1" }));
        cboLop.setToolTipText("");
        cboLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLopActionPerformed(evt);
            }
        });
        jPanel3.add(cboLop, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 10, 76, 40));

        tblNam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tên đọc giả", "Mã PM", "Ngày mượn ", "Ngày trả", "Trạng Thái"
            }
        ));
        jScrollPane5.setViewportView(tblNam);

        jPanel3.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 13, 770, 405));

        myButton23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/excel.png"))); // NOI18N
        myButton23.setRadius(10);
        myButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton23ActionPerformed(evt);
            }
        });
        jPanel3.add(myButton23, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 430, 159, 35));

        jTabbedPane1.addTab("Thống kê theo lớp", jPanel3);

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        tblNXB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "NXB", "Số Lượng"
            }
        ));
        jScrollPane6.setViewportView(tblNXB);

        myButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-bar-chart-alt-2.png"))); // NOI18N
        myButton16.setRadius(10);
        myButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton16ActionPerformed(evt);
            }
        });

        myButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/grow-up (3).png"))); // NOI18N
        myButton17.setRadius(10);
        myButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton17ActionPerformed(evt);
            }
        });

        myButton24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/excel.png"))); // NOI18N
        myButton24.setRadius(10);
        myButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton24ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(myButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(myButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(myButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(myButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thống kê theo NXB", jPanel4);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        myButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-bar-chart-alt-2.png"))); // NOI18N
        myButton14.setRadius(10);
        myButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton14ActionPerformed(evt);
            }
        });

        myButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pie-chart-alt-2-regular-24.png"))); // NOI18N
        myButton15.setRadius(10);
        myButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton15ActionPerformed(evt);
            }
        });

        cboThang.setEditable(true);
        cboThang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cboThang.setToolTipText("");
        cboThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThangActionPerformed(evt);
            }
        });

        tblSINHVIEN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "TênĐG", "Lớp", "Trạng Thái", "Ngày Tạo", "Ngày Trả"
            }
        ));
        jScrollPane7.setViewportView(tblSINHVIEN);

        myButton25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/excel.png"))); // NOI18N
        myButton25.setRadius(10);
        myButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton25ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(myButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(myButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(myButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(myButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(myButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(myButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Thống kê theo theo tháng", jPanel5);

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 975, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(998, 998, 998)
                        .addComponent(lblDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblDongHo))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void QLNhanVIenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QLNhanVIenMouseEntered
        // TODO add your handling code here:
        QLNhanVIen.setForeground(new Color(255, 255, 0));
    }//GEN-LAST:event_QLNhanVIenMouseEntered

    private void QLNhanVIenMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QLNhanVIenMouseExited
        // TODO add your handling code here:
        QLNhanVIen.setForeground(new Color(242, 242, 242));
    }//GEN-LAST:event_QLNhanVIenMouseExited

    private void myButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton17ActionPerformed
       new BarChartNXBLine(null, true).setVisible(true);
    }//GEN-LAST:event_myButton17ActionPerformed

    private void myButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton19ActionPerformed
      new PieChartLop(null, true).setVisible(true);
    }//GEN-LAST:event_myButton19ActionPerformed

    private void myButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton21ActionPerformed
        new BarChartTheLoaiLine(null, true).setVisible(true);
    }//GEN-LAST:event_myButton21ActionPerformed

    private void myButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton15ActionPerformed
        new PieChartThangNam(null, true).setVisible(true);
    }//GEN-LAST:event_myButton15ActionPerformed

    private void cboLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLopActionPerformed
        fillTableTheoLop();
    }//GEN-LAST:event_cboLopActionPerformed

    private void myButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton20ActionPerformed
        new BarChartTheLoai(null, true).setVisible(true);
    }//GEN-LAST:event_myButton20ActionPerformed

    private void myButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton16ActionPerformed
         new BarChartNXB(null, true).setVisible(true);
    }//GEN-LAST:event_myButton16ActionPerformed

    private void cboThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThangActionPerformed
       fillTableTheoSinhVien();
    }//GEN-LAST:event_cboThangActionPerformed

    private void myButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton14ActionPerformed
        new BarCharrThangLine(null, true).setVisible(true);
    }//GEN-LAST:event_myButton14ActionPerformed

    private void myButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton22ActionPerformed
        // TODO add your handling code here:
         Exccel1();
    }//GEN-LAST:event_myButton22ActionPerformed

    private void myButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton23ActionPerformed
        // TODO add your handling code here:
         Exccel2();
    }//GEN-LAST:event_myButton23ActionPerformed

    private void myButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton24ActionPerformed
        // TODO add your handling code here:
          Exccel3();
    }//GEN-LAST:event_myButton24ActionPerformed

    private void myButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton25ActionPerformed
        // TODO add your handling code here:
          Exccel4();
    }//GEN-LAST:event_myButton25ActionPerformed

 public void init() {

        new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date now = new Date();
                SimpleDateFormat formater = new SimpleDateFormat("hh:mm:ss a");
                String text = formater.format(now);

                lblDongHo.setText(text);
            }
        }).start();
         fillTableTheoTG();
        fillTableTheoLop();
        fillTableTheoSinhVien();
        fillTableTheoNXB();
       
        fillComboBoxthang();
    }
    void fillTableTheoTG() {
        DefaultTableModel model = (DefaultTableModel) tblTacGia.getModel();
        model.setRowCount(0);
        List<Object[]> list = tkdao.getTacgia();
        for (Object[] row : list) {
            model.addRow(new Object[]{row[0], row[1], row[2], row[3]});

        }
    }

    void fillTableTheoLop() {
        DefaultTableModel model = (DefaultTableModel) tblNam.getModel();
        model.setRowCount(0);
        try {
            Object selectedItem = cboLop.getSelectedItem();
           
                List<Object[]> list = tkdao.getTheoLop((String) selectedItem);
                for (Object[] row : list) {
                    String tt = "";
                    boolean trangThai = (boolean) row[4];
                    if (trangThai) {
                        tt = "Đã trả";
                    } else {
                        tt = "Chưa trả";
                    }

                    model.addRow(new Object[]{row[0], row[1], row[2], row[3], tt});
                }
           
        } catch (Exception e) {
//            e.printStackTrace();
        }
    }

 

    void fillTableTheoSinhVien() {

        DefaultTableModel model = (DefaultTableModel) tblSINHVIEN.getModel();
        model.setRowCount(0);
        try {
            int thang = (Integer) cboThang.getSelectedItem();
            List<Object[]> list = tkdao.getTheoSinhVien(thang);
            for (Object[] row : list) {
                String tt = "";
                boolean trangThai = (boolean) row[2];
                if (trangThai) {
                    tt = "Đã trả";
                } else {
                    tt = "Chưa trả";
                }

                model.addRow(new Object[]{row[0], row[1], tt, row[3], row[4]});
//                }
            }
        } catch (Exception e) {
//            e.printStackTrace();
        }
    }

    void fillComboBoxthang() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboThang.getModel();
        model.removeAllElements();
        List<Integer> list = pmdao.selectByThang();
        for (Integer integer : list) {
            model.addElement(integer);
        }

    }

    void fillTableTheoNXB() {
        DefaultTableModel model = (DefaultTableModel) tblNXB.getModel();
        model.setRowCount(0);
        List<Object[]> list = tkdao.getTheoNXB();
        for (Object[] row : list) {
            model.addRow(new Object[]{row[0], row[1], row[2], row[3]});

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel QLNhanVIen;
    private button.combobox.Combobox cboLop;
    private button.combobox.Combobox cboThang;
    private component.menu_1 header;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDongHo;
    private javax.swing.JPanel main;
    private button.MyButton myButton14;
    private button.MyButton myButton15;
    private button.MyButton myButton16;
    private button.MyButton myButton17;
    private button.MyButton myButton19;
    private button.MyButton myButton20;
    private button.MyButton myButton21;
    private button.MyButton myButton22;
    private button.MyButton myButton23;
    private button.MyButton myButton24;
    private button.MyButton myButton25;
    private javax.swing.JTable tblNXB;
    private javax.swing.JTable tblNam;
    private javax.swing.JTable tblSINHVIEN;
    private javax.swing.JTable tblTacGia;
    // End of variables declaration//GEN-END:variables

 public void Exccel4() {

        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            List<Integer> years = pmdao.selectYears(); // Lấy danh sách các năm từ nguồn tương ứng

            CellStyle number = workbook.createCellStyle();// định dạng
            DataFormat numberFormat = workbook.createDataFormat();
//            number.setDataFormat(numberFormat.getFormat("#,##0.00 VND"));

            for (Integer year : years) {
                XSSFSheet sheet = workbook.createSheet(year.toString());
                XSSFRow row = null;
                Cell cell = null;
                // Tạo tiêu đề cho bảng
                row = sheet.createRow(0);
// Merge các ô trong hàng đầu thành 1 ô
                sheet.addMergedRegion(new CellRangeAddress(0, 2, 0, 6));
                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("Thống kê theo tháng ");
                cell.setCellStyle(getCenterAlignedStyle(workbook));

                row = sheet.createRow(3);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue(" Tên ĐG");

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue("Lớp");

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue("Trạng thái");

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue("Ngày tạo");
                cell.setCellStyle(number);

                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue("Ngày trả");
                cell.setCellStyle(number);

//                cell = row.createCell(5, CellType.NUMERIC);
//                cell.setCellValue("Học Phí Cao Nhất");
//                cell.setCellStyle(number);
//
//                cell = row.createCell(6, CellType.NUMERIC);
//                cell.setCellValue("Học Phí Trung Bình");
//                cell.setCellStyle(number);

                // Lấy dữ liệu từ nguồn tương ứng cho năm hiện tại
                List<Object[]> list = tkdao.getTheoSinhVien(year);
                // Điền dữ liệu vào bảng
                for (int i = 0; i < list.size(); i++) {
                    Object[] rowOb = list.get(i);
                    row = sheet.createRow(4 + i);
                    for (int j = 0; j < rowOb.length; j++) {
                        cell = row.createCell(j, CellType.NUMERIC);
                        cell.setCellValue(rowOb[j].toString());
                    }
                }

            }

            // Lưu file Excel
            try {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Chọn vị trí và tên file");
                fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));

                int userSelection = fileChooser.showSaveDialog(this);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    String filePath = fileChooser.getSelectedFile().getAbsolutePath();

                    if (!filePath.toLowerCase().endsWith(".xlsx")) {
                        filePath += ".xlsx";
                    }

                    FileOutputStream fileOut = new FileOutputStream(filePath);
                    workbook.write(fileOut);
                    fileOut.close();

                    MsgBox.alert(this, "Xuất file Excel thành công");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
  public void Exccel3() {

        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
//            List<Integer> years = pmdao.selectYears(); // Lấy danh sách các năm từ nguồn tương ứng

            CellStyle number = workbook.createCellStyle();// định dạng
            DataFormat numberFormat = workbook.createDataFormat();
//            number.setDataFormat(numberFormat.getFormat("#,##0.00 VND"));

//            for (Integer year : years) {
                XSSFSheet sheet = workbook.createSheet();
                XSSFRow row = null;
                Cell cell = null;
                // Tạo tiêu đề cho bảng
                row = sheet.createRow(0);
// Merge các ô trong hàng đầu thành 1 ô
                sheet.addMergedRegion(new CellRangeAddress(0, 2, 0, 6));
                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("Thống kê theo NXB");
                cell.setCellStyle(getCenterAlignedStyle(workbook));

                row = sheet.createRow(3);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("Tên NXB");

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue("Số Lượng");

//                cell = row.createCell(2, CellType.STRING);
//                cell.setCellValue("Nhiều nhất");
//
//                cell = row.createCell(3, CellType.STRING);
//                cell.setCellValue("Ít nhất");
//                cell.setCellStyle(number);

//                cell = row.createCell(4, CellType.NUMERIC);
//                cell.setCellValue("Ngày trả");
//                cell.setCellStyle(number);

//                cell = row.createCell(5, CellType.NUMERIC);
//                cell.setCellValue("Học Phí Cao Nhất");
//                cell.setCellStyle(number);
//
//                cell = row.createCell(6, CellType.NUMERIC);
//                cell.setCellValue("Học Phí Trung Bình");
//                cell.setCellStyle(number);

                // Lấy dữ liệu từ nguồn tương ứng cho năm hiện tại
                List<Object[]> list = tkdao.getTheoNXB();
                // Điền dữ liệu vào bảng
                for (int i = 0; i < list.size(); i++) {
                    Object[] rowOb = list.get(i);
                    row = sheet.createRow(4 + i);
                    for (int j = 0; j < rowOb.length; j++) {
                        cell = row.createCell(j, CellType.NUMERIC);
                        cell.setCellValue(rowOb[j].toString());
                    }
                }

//            }

            // Lưu file Excel
            try {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Chọn vị trí và tên file");
                fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));

                int userSelection = fileChooser.showSaveDialog(this);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    String filePath = fileChooser.getSelectedFile().getAbsolutePath();

                    if (!filePath.toLowerCase().endsWith(".xlsx")) {
                        filePath += ".xlsx";
                    }

                    FileOutputStream fileOut = new FileOutputStream(filePath);
                    workbook.write(fileOut);
                    fileOut.close();

                    MsgBox.alert(this, "Xuất file Excel thành công");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
   public void Exccel2() {

        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            List<String> lop = pmdao.selectLop(); // Lấy danh sách các năm từ nguồn tương ứng

            CellStyle number = workbook.createCellStyle();// định dạng
            DataFormat numberFormat = workbook.createDataFormat();
//            number.setDataFormat(numberFormat.getFormat("#,##0.00 VND"));

            for (String lops : lop) {
                XSSFSheet sheet = workbook.createSheet(lops.toString());
                XSSFRow row = null;
                Cell cell = null;
                // Tạo tiêu đề cho bảng
                row = sheet.createRow(0);
// Merge các ô trong hàng đầu thành 1 ô
                sheet.addMergedRegion(new CellRangeAddress(0, 2, 0, 6));
                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("Thống kê theo lớp");
                cell.setCellStyle(getCenterAlignedStyle(workbook));

                row = sheet.createRow(3);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue(" Tên ĐG");

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue("Mã PM");

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue("Người mượn");

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue("Ngày trả");
                cell.setCellStyle(number);

                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue("Trạng thái");
                cell.setCellStyle(number);

//                cell = row.createCell(5, CellType.NUMERIC);
//                cell.setCellValue("Học Phí Cao Nhất");
//                cell.setCellStyle(number);
//
//                cell = row.createCell(6, CellType.NUMERIC);
//                cell.setCellValue("Học Phí Trung Bình");
//                cell.setCellStyle(number);

                // Lấy dữ liệu từ nguồn tương ứng cho năm hiện tại
                List<Object[]> list = tkdao.getTheoLop(lops);
                // Điền dữ liệu vào bảng
                for (int i = 0; i < list.size(); i++) {
                    Object[] rowOb = list.get(i);
                    row = sheet.createRow(4 + i);
                    for (int j = 0; j < rowOb.length; j++) {
                        cell = row.createCell(j, CellType.NUMERIC);
                        cell.setCellValue(rowOb[j].toString());
                    }
                }

            }

            // Lưu file Excel
            try {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Chọn vị trí và tên file");
                fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));

                int userSelection = fileChooser.showSaveDialog(this);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    String filePath = fileChooser.getSelectedFile().getAbsolutePath();

                    if (!filePath.toLowerCase().endsWith(".xlsx")) {
                        filePath += ".xlsx";
                    }

                    FileOutputStream fileOut = new FileOutputStream(filePath);
                    workbook.write(fileOut);
                    fileOut.close();

                    MsgBox.alert(this, "Xuất file Excel thành công");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void Exccel1() {

        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            
//            List<Integer> years = pmdao.selectYears(); // Lấy danh sách các năm từ nguồn tương ứng

            CellStyle number = workbook.createCellStyle();// định dạng
            DataFormat numberFormat = workbook.createDataFormat();
//            number.setDataFormat(numberFormat.getFormat("#,##0.00 VND"));

//            for (Integer year : years) {
                XSSFSheet sheet = workbook.createSheet();
                XSSFRow row = null;
                Cell cell = null;
                // Tạo tiêu đề cho bảng
                row = sheet.createRow(0);
// Merge các ô trong hàng đầu thành 1 ô
                sheet.addMergedRegion(new CellRangeAddress(0, 2, 0, 9));
                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("Thống kê theo tác giả");
                cell.setCellStyle(getCenterAlignedStyle(workbook));

                row = sheet.createRow(3);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue("Tên TG");

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue("Số lượng");

//                cell = row.createCell(2, CellType.STRING);
//                cell.setCellValue("Nhiều nhất");
//
//                cell = row.createCell(3, CellType.STRING);
//                cell.setCellValue("Ít nhất");
//                cell.setCellStyle(number);

//                cell = row.createCell(4, CellType.NUMERIC);
//                cell.setCellValue("Ngày trả");
//                cell.setCellStyle(number);

//                cell = row.createCell(5, CellType.NUMERIC);
//                cell.setCellValue("Học Phí Cao Nhất");
//                cell.setCellStyle(number);
//
//                cell = row.createCell(6, CellType.NUMERIC);
//                cell.setCellValue("Học Phí Trung Bình");
//                cell.setCellStyle(number);

                // Lấy dữ liệu từ nguồn tương ứng cho năm hiện tại
                List<Object[]> list = tkdao.getTacgia();
                // Điền dữ liệu vào bảng
                for (int i = 0; i < list.size(); i++) {
                    Object[] rowOb = list.get(i);
                    row = sheet.createRow(4 + i);
                    for (int j = 0; j < rowOb.length; j++) {
                        cell = row.createCell(j, CellType.NUMERIC);
                        cell.setCellValue(rowOb[j].toString());
                    }
                }

//            }

            // Lưu file Excel
            try {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Chọn vị trí và tên file");
                fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xlsx"));

                int userSelection = fileChooser.showSaveDialog(this);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    String filePath = fileChooser.getSelectedFile().getAbsolutePath();

                    if (!filePath.toLowerCase().endsWith(".xlsx")) {
                        filePath += ".xlsx";
                    }

                    FileOutputStream fileOut = new FileOutputStream(filePath);
                    workbook.write(fileOut);
                    fileOut.close();

                    MsgBox.alert(this, "Xuất file Excel thành công");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
 
  private CellStyle getCenterAlignedStyle(XSSFWorkbook workbook) {
        CellStyle style = workbook.createCellStyle();
        style.setAlignment(org.apache.poi.ss.usermodel.HorizontalAlignment.CENTER);
        style.setVerticalAlignment(org.apache.poi.ss.usermodel.VerticalAlignment.CENTER);
        XSSFFont font = workbook.createFont();
        font.setBold(true);
        font.setFontHeightInPoints((short) 40);
        font.setColor(IndexedColors.RED.getIndex());
        style.setFont(font);
        return style;
    }

}
