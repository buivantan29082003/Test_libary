/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import Dao.DocGiaDao;
import Dao.NXBDao;
import Dao.NhanVienDao;
import Dao.QLThuVienDao;
import Dao.SachDao;
import Dao.TacGiaDao;
import Entity.NXB;
import Entity.Sach;
import Entity.TacGiaEn;
import static form.QLNhanVien1.checkTrungMaNV;
import static form.QLSach.checkMaNXB;
import static form.QLSach.checkMaTG;
import static form.QLSinhVien1.checkTrungMa;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import utils.Auth;
import utils.Auth_02;
import utils.Auth_Sach;
import utils.MsgBox;
import static form.QLSach.checkTrungMaSach;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author duyvo
 */
public class QLSach extends javax.swing.JPanel {

    String Name = "^[\\p{L}\\s]+$";
    List<Sach> list = new ArrayList<>();
    SachDao sdao = new SachDao();
    TacGiaDao tgdao = new TacGiaDao();
    NXBDao nxbdao = new NXBDao();
    public String ms = "";

    

    int row = 0;
    String connectionUrl = "jdbc:sqlserver://localhost:1433;"
            + "databaseName=QUANLYTHUVIEN1;"
            + "user=sa;password=123;"
            + "encrypt=true;"
            + "trustServerCertificate=true;";

    /**
     * Creates new form QLSach
     */
    public QLSach() {
        initComponents();
        init();
        dienvao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        theloai = new javax.swing.ButtonGroup();
        main = new javax.swing.JPanel();
        myButton1 = new button.MyButton();
        myButton3 = new button.MyButton();
        myButton6 = new button.MyButton();
        myButton5 = new button.MyButton();
        myButton8 = new button.MyButton();
        myButton2 = new button.MyButton();
        myButton4 = new button.MyButton();
        myButton7 = new button.MyButton();
        txtMaSach = new button.textfield.TextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSach = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        chkVH = new javax.swing.JCheckBox();
        chkDL = new javax.swing.JCheckBox();
        chkSHelp = new javax.swing.JCheckBox();
        chkLS = new javax.swing.JCheckBox();
        chkKD = new javax.swing.JCheckBox();
        chkTA = new javax.swing.JCheckBox();
        chkGT = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        chkTrHoc = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        txtTenSach = new button.textfield.TextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtGhiChu = new button.textfield.TextField();
        header = new component.menu_1();
        QLNhanVIen = new javax.swing.JLabel();
        txtTimKiem = new button.textfield.TextField();
        lblTenSach = new javax.swing.JLabel();
        lblMaSach = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblDongHo = new javax.swing.JLabel();
        lbltheloai = new javax.swing.JLabel();
        lblMaTG = new javax.swing.JLabel();
        lblNXB = new javax.swing.JLabel();
        cboTacGia = new button.combobox.Combobox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTacGia = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblNXB = new javax.swing.JTable();
        cboNXB = new button.combobox.Combobox();

        main.setBackground(new java.awt.Color(255, 204, 204));
        main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        myButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-plus.png"))); // NOI18N
        myButton1.setColorClick(new java.awt.Color(255, 204, 153));
        myButton1.setRadius(10);
        myButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton1ActionPerformed(evt);
            }
        });
        main.add(myButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 550, 50, 45));

        myButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-pencil.png"))); // NOI18N
        myButton3.setRadius(10);
        myButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton3ActionPerformed(evt);
            }
        });
        main.add(myButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 550, 50, 45));

        myButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-last-page.png"))); // NOI18N
        myButton6.setRadius(10);
        myButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton6ActionPerformed(evt);
            }
        });
        main.add(myButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 550, 50, 45));

        myButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-chevron-right.png"))); // NOI18N
        myButton5.setRadius(10);
        myButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton5ActionPerformed(evt);
            }
        });
        main.add(myButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 550, 50, 45));

        myButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-chevron-left.png"))); // NOI18N
        myButton8.setRadius(10);
        myButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton8ActionPerformed(evt);
            }
        });
        main.add(myButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 550, 50, 45));

        myButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-x.png"))); // NOI18N
        myButton2.setRadius(10);
        myButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton2ActionPerformed(evt);
            }
        });
        main.add(myButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 550, 50, 45));

        myButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bxs-news.png"))); // NOI18N
        myButton4.setRadius(10);
        myButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton4ActionPerformed(evt);
            }
        });
        main.add(myButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 550, 50, 45));

        myButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/first-page-regular-24.png"))); // NOI18N
        myButton7.setRadius(10);
        myButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton7ActionPerformed(evt);
            }
        });
        main.add(myButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 550, 50, 45));

        txtMaSach.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaSachFocusLost(evt);
            }
        });
        txtMaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSachActionPerformed(evt);
            }
        });
        txtMaSach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaSachKeyReleased(evt);
            }
        });
        main.add(txtMaSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 267, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel7.setText("Mã sách:");
        main.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, -1, -1));

        tblSach.setBackground(new java.awt.Color(204, 204, 204));
        tblSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã sách", "Tên sách", "Tác Giả", "Nhà xuất bản", "Thể loại", "Ghi chú"
            }
        ));
        tblSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblSachMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblSach);
        if (tblSach.getColumnModel().getColumnCount() > 0) {
            tblSach.getColumnModel().getColumn(0).setMaxWidth(70);
            tblSach.getColumnModel().getColumn(1).setMaxWidth(250);
            tblSach.getColumnModel().getColumn(2).setMaxWidth(80);
            tblSach.getColumnModel().getColumn(3).setMaxWidth(80);
            tblSach.getColumnModel().getColumn(4).setMaxWidth(200);
            tblSach.getColumnModel().getColumn(5).setMaxWidth(150);
        }

        main.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 191, 570, 340));

        jLabel8.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel8.setText("Tác giả:");
        main.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, -1, -1));

        chkVH.setText("Văn học");
        main.add(chkVH, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 80, 30));

        chkDL.setText("Địa lí");
        main.add(chkDL, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 80, 30));

        chkSHelp.setText("Self help");
        chkSHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSHelpActionPerformed(evt);
            }
        });
        main.add(chkSHelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 80, 30));

        chkLS.setText("Lịch sử");
        main.add(chkLS, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 80, 30));

        chkKD.setText("Kinh dị");
        main.add(chkKD, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, 80, 30));

        chkTA.setText("Tiếng Anh");
        main.add(chkTA, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, 102, 30));

        chkGT.setText("Giả tưởng");
        main.add(chkGT, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 110, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel10.setText("Thể loại:");
        main.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, -1, -1));

        chkTrHoc.setText("Triết học");
        main.add(chkTrHoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 80, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel9.setText("Tên sách:");
        main.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, -1, -1));

        txtTenSach.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTenSachFocusLost(evt);
            }
        });
        txtTenSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenSachActionPerformed(evt);
            }
        });
        main.add(txtTenSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 270, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel11.setText("NXB:");
        main.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 430, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel12.setText("Ghi chú:");
        main.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 500, -1, -1));

        txtGhiChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGhiChuActionPerformed(evt);
            }
        });
        main.add(txtGhiChu, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 530, 270, 100));

        QLNhanVIen.setBackground(new java.awt.Color(102, 102, 102));
        QLNhanVIen.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        QLNhanVIen.setForeground(new java.awt.Color(255, 255, 255));
        QLNhanVIen.setText("Quản lí sách");
        QLNhanVIen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                QLNhanVIenMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                QLNhanVIenMouseExited(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(QLNhanVIen)
                .addContainerGap(404, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(QLNhanVIen)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        main.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });
        main.add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, 153, -1));

        lblTenSach.setForeground(new java.awt.Color(255, 51, 51));
        main.add(lblTenSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 220, 20));

        lblMaSach.setForeground(new java.awt.Color(255, 51, 51));
        main.add(lblMaSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 220, 20));

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel13.setText("Tìm kiếm:");
        main.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, -1, -1));

        lblDongHo.setText("Đồng hồ");
        main.add(lblDongHo, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 610, 60, -1));

        lbltheloai.setForeground(new java.awt.Color(255, 51, 51));
        main.add(lbltheloai, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 220, 20));

        lblMaTG.setForeground(new java.awt.Color(255, 51, 51));
        main.add(lblMaTG, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 430, 220, 20));

        lblNXB.setForeground(new java.awt.Color(255, 51, 51));
        main.add(lblNXB, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 510, 220, 20));

        cboTacGia.setEditable(true);
        cboTacGia.setToolTipText("");
        cboTacGia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cboTacGiaFocusLost(evt);
            }
        });
        cboTacGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboTacGiaMouseClicked(evt);
            }
        });
        cboTacGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTacGiaActionPerformed(evt);
            }
        });
        main.add(cboTacGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, 250, 40));

        tblTacGia.setBackground(new java.awt.Color(204, 204, 204));
        tblTacGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã TG", "Tên TG"
            }
        ));
        tblTacGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblTacGiaMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblTacGia);
        if (tblTacGia.getColumnModel().getColumnCount() > 0) {
            tblTacGia.getColumnModel().getColumn(0).setMinWidth(50);
            tblTacGia.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        main.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 80, 180, 90));

        tblNXB.setBackground(new java.awt.Color(204, 204, 204));
        tblNXB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã NXB", "Tên NXB"
            }
        ));
        tblNXB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblNXBMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(tblNXB);
        if (tblNXB.getColumnModel().getColumnCount() > 0) {
            tblNXB.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        main.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 80, 180, 90));

        cboNXB.setEditable(true);
        cboNXB.setToolTipText("");
        cboNXB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cboNXBFocusLost(evt);
            }
        });
        cboNXB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboNXBMouseClicked(evt);
            }
        });
        cboNXB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNXBActionPerformed(evt);
            }
        });
        main.add(cboNXB, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 250, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void myButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton1ActionPerformed

        insert();
    }//GEN-LAST:event_myButton1ActionPerformed

    private void myButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton3ActionPerformed
        update();
    }//GEN-LAST:event_myButton3ActionPerformed

    private void myButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton6ActionPerformed
        last();
    }//GEN-LAST:event_myButton6ActionPerformed

    private void myButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton5ActionPerformed
      next();
    }//GEN-LAST:event_myButton5ActionPerformed

    private void myButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton8ActionPerformed
         prev();
    }//GEN-LAST:event_myButton8ActionPerformed

    private void myButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton2ActionPerformed
        delete();
    }//GEN-LAST:event_myButton2ActionPerformed

    private void myButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton4ActionPerformed
        clearForm();
    }//GEN-LAST:event_myButton4ActionPerformed

    private void myButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton7ActionPerformed
        first();
    }//GEN-LAST:event_myButton7ActionPerformed

    private void txtMaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSachActionPerformed

    private void tblSachMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSachMousePressed
        if (evt.getClickCount() == 2) {
            row = tblSach.getSelectedRow();
            //   tab.setSelectedIndex(0);
            this.edit();
        }
    }//GEN-LAST:event_tblSachMousePressed

    private void chkSHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSHelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkSHelpActionPerformed

    private void txtTenSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenSachActionPerformed

    private void txtGhiChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGhiChuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGhiChuActionPerformed

    private void QLNhanVIenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QLNhanVIenMouseEntered
        // TODO add your handling code here:
        QLNhanVIen.setForeground(new Color(255, 255, 0));
    }//GEN-LAST:event_QLNhanVIenMouseEntered

    private void QLNhanVIenMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QLNhanVIenMouseExited
        // TODO add your handling code here:
        QLNhanVIen.setForeground(new Color(242, 242, 242));
    }//GEN-LAST:event_QLNhanVIenMouseExited

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        fillTable();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void txtMaSachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaSachKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtMaSachKeyReleased

    private void cboTacGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTacGiaActionPerformed
        //        fillTableTheoTacGia();
    }//GEN-LAST:event_cboTacGiaActionPerformed

    private void tblTacGiaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTacGiaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblTacGiaMousePressed

    private void tblNXBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNXBMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblNXBMousePressed

    private void cboNXBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNXBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboNXBActionPerformed

    private void txtMaSachFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaSachFocusLost
        // TODO add your handling code here:
        if (txtMaSach.getText().equals("")) {
            lblMaSach.setText("Chưa nhập mã sách");
            txtMaSach.setBackground(Color.red);
        } else {
            lblMaSach.setText("");
            txtMaSach.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtMaSachFocusLost

    private void txtTenSachFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenSachFocusLost
        // TODO add your handling code here:
        if (txtTenSach.getText().equals("")) {
            lblTenSach.setText("Chưa nhập tên sách");
            txtTenSach.setBackground(Color.red);

        } else {
            lblTenSach.setText("");
            txtTenSach.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtTenSachFocusLost

    private void cboTacGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboTacGiaMouseClicked

    }//GEN-LAST:event_cboTacGiaMouseClicked

    private void cboNXBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboNXBMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_cboNXBMouseClicked

    private void cboTacGiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cboTacGiaFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_cboTacGiaFocusLost

    private void cboNXBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cboNXBFocusLost
        // TODO add your handling code here:
 
    }//GEN-LAST:event_cboNXBFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel QLNhanVIen;
    private button.combobox.Combobox cboNXB;
    private button.combobox.Combobox cboTacGia;
    private javax.swing.JCheckBox chkDL;
    private javax.swing.JCheckBox chkGT;
    private javax.swing.JCheckBox chkKD;
    private javax.swing.JCheckBox chkLS;
    private javax.swing.JCheckBox chkSHelp;
    private javax.swing.JCheckBox chkTA;
    private javax.swing.JCheckBox chkTrHoc;
    private javax.swing.JCheckBox chkVH;
    private component.menu_1 header;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDongHo;
    private javax.swing.JLabel lblMaSach;
    private javax.swing.JLabel lblMaTG;
    private javax.swing.JLabel lblNXB;
    private javax.swing.JLabel lblTenSach;
    private javax.swing.JLabel lbltheloai;
    private javax.swing.JPanel main;
    private button.MyButton myButton1;
    private button.MyButton myButton2;
    private button.MyButton myButton3;
    private button.MyButton myButton4;
    private button.MyButton myButton5;
    private button.MyButton myButton6;
    private button.MyButton myButton7;
    private button.MyButton myButton8;
    private javax.swing.JTable tblNXB;
    private javax.swing.JTable tblSach;
    private javax.swing.JTable tblTacGia;
    private javax.swing.ButtonGroup theloai;
    private button.textfield.TextField txtGhiChu;
    private button.textfield.TextField txtMaSach;
    private button.textfield.TextField txtTenSach;
    private button.textfield.TextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
 public void timkiem() {
        try {
            Connection con = DriverManager.getConnection(connectionUrl);
            PreparedStatement st = con.prepareStatement("select TenSACH,MaTG,MaNXB,MaTL,MOTA from Sach where TenSACH =?");
            st.setString(1, txtTimKiem.getText());
            ResultSet rs = st.executeQuery();
            list.clear();
            while (rs.next()) {
                //tạo 1 đối tượng Grade
                Sach sach = new Sach();
                sach.setMaSACH(rs.getString("MaSACH"));
                sach.setTenSACH(rs.getString("TenSach"));
                sach.setTacGIA(rs.getString("TacGia"));
                sach.setNXB(rs.getString("NXB"));
                //  sach.setTheLoai(rs.);       
                sach.setMOTA(rs.getString("GhiChu"));
                //thêm điểm vào dsdiem
                list.add(sach);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void fillComboBoxTG() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTacGia.getModel();
        model.removeAllElements();

        List<TacGiaEn> list = tgdao.selectAll();
        for (TacGiaEn s : list) {
            model.addElement(s);
        }
        cboTacGia.setSelectedIndex(0);
    }

    void fillComboBoxNXB() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboNXB.getModel();
        model.removeAllElements();

        List<NXB> list = nxbdao.selectAll();
        for (NXB s : list) {
            model.addElement(s);
        }
        cboNXB.setSelectedIndex(0);
    }

    private void fillTableTacGia() {
        DefaultTableModel model = (DefaultTableModel) tblTacGia.getModel();
        model.setRowCount(0);
        try {
            List<TacGiaEn> list = tgdao.selectAll();
            for (TacGiaEn tg : list) {
                Object[] row = {
                    tg.getMaTG(),
                    tg.getTenTG()};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu tác giả!");
            e.printStackTrace();
        }
    }

    private void fillTableNXB() {
        DefaultTableModel model = (DefaultTableModel) tblNXB.getModel();
        model.setRowCount(0);
        try {
            List<NXB> list = nxbdao.selectAll();
            for (NXB nxb : list) {
                Object[] row = {
                    nxb.getMaNXB(),
                    nxb.getTenNXB()};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu tác giả!");
            e.printStackTrace();
        }
    }

    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblSach.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtTimKiem.getText();

            List<Sach> list = sdao.selectByKeyword(keyword);
            //   List<Sach> list = sdao.selectAll();
            for (Sach s : list) {
                Object[] row = {
                    s.getMaSACH(),
                    s.getTenSACH(),
                    s.getTacGIA(),
                    s.getNXB(),
                    String.join(",", s.getTheLoai()), // Join list of genres into a comma-separated string
                    s.getMOTA()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu !");
            e.printStackTrace();
        }
    }

    private void clearForm() {
        txtMaSach.setText(null);
        txtTenSach.setText(null);
        cboNXB.setSelectedItem("");
        cboTacGia.setSelectedItem("");
        txtGhiChu.setText(null);
        chkGT.setSelected(false);
        chkTA.setSelected(false);
        chkVH.setSelected(false);
        chkTrHoc.setSelected(false);
        chkLS.setSelected(false);
        chkDL.setSelected(false);
        chkKD.setSelected(false);
        chkSHelp.setSelected(false);
        fillTableNXB();
        fillTableTacGia();
    }

    private void edit() {
        try {
            String manv = (String) tblSach.getValueAt(this.row, 0);
            Sach nv = sdao.selectById(manv);
            if (nv != null) {
                this.setForm(nv);
//                System.out.println("e:" + nv);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void setForm(Sach nv) {
        txtMaSach.setText(nv.getMaSACH());
        txtTenSach.setText(nv.getTenSACH());
        cboTacGia.setSelectedItem(nv.getTacGIA());
        cboNXB.setSelectedItem(nv.getNXB());
        txtGhiChu.setText(nv.getMOTA());
        chkKD.setSelected(false);
        chkGT.setSelected(false);
        chkTA.setSelected(false);
        chkSHelp.setSelected(false);
        chkLS.setSelected(false);
        chkVH.setSelected(false);
        chkTrHoc.setSelected(false);
        chkDL.setSelected(false);

        for (String theLoai : nv.getTheLoai()) {
            if (!theLoai.contains(",")) {
                theLoai += ",";
            }
            for (String tl : theLoai.split(",")) {

                if (tl.equalsIgnoreCase("KD01")) {
                    chkKD.setSelected(true);
                    System.out.println("1: " + theLoai);
                }
                if (tl.equalsIgnoreCase("TrH01")) {
                    chkTrHoc.setSelected(true);
                    System.out.println("1: " + theLoai);
                }
                if (tl.equalsIgnoreCase("TA01")) {
                    chkTA.setSelected(true);
                    System.out.println("1: " + theLoai);
                }
                if (tl.equalsIgnoreCase("SH01")) {
                    chkSHelp.setSelected(true);
                    System.out.println("1: " + theLoai);
                }
                if (tl.equalsIgnoreCase("LS01")) {
                    chkLS.setSelected(true);
                    System.out.println("1: " + theLoai);
                }
                if (tl.equalsIgnoreCase("GT01")) {
                    chkGT.setSelected(true);
                    System.out.println("1: " + theLoai);
                }
                if (tl.equalsIgnoreCase("DL01")) {
                    chkDL.setSelected(true);
                    System.out.println("1: " + theLoai);
                }
                if (tl.equalsIgnoreCase("VH01")) {
                    chkVH.setSelected(true);
                    System.out.println("1: " + theLoai);
                }
                //            System.out.println("a: "+theLoai);
            }
        }
        DefaultTableModel modeltg = (DefaultTableModel) tblTacGia.getModel();
        modeltg.setRowCount(0);
        String matg = (String) tblSach.getValueAt(this.row, 2);
        List<Object[]> listtg = sdao.selectByTacGia(matg);
        for (Object[] rowtg : listtg) {
            modeltg.addRow(new Object[]{rowtg[0], rowtg[1]});
            break;
        }

        DefaultTableModel modelnxb = (DefaultTableModel) tblNXB.getModel();
        modelnxb.setRowCount(0);
        String manxb = (String) tblSach.getValueAt(this.row, 3);
        List<Object[]> listnxb = sdao.selectByNXB(manxb);
        for (Object[] rownxb : listnxb) {
            modelnxb.addRow(new Object[]{rownxb[0], rownxb[1]});
            break;
        }
    }

    private Sach getForm() {
        Sach nv = new Sach();
        nv.setMaSACH(txtMaSach.getText());
        nv.setTenSACH(txtTenSach.getText());
        nv.setTacGIA(cboTacGia.getSelectedItem().toString());
        nv.setNXB(cboNXB.getSelectedItem().toString());
        // Khởi tạo danh sách thể loại
        ArrayList<String> TheLoai = new ArrayList<>();
        // Kiểm tra từng checkbox và thêm thể loại tương ứng
        if (chkKD.isSelected()) {
            TheLoai.add("KD01");
        }
        if (chkSHelp.isSelected()) {
            TheLoai.add("SH01");
        }
        if (chkTA.isSelected()) {
            TheLoai.add("TA01");
        }
        if (chkTrHoc.isSelected()) {
            TheLoai.add("TrH01");
        }
        if (chkLS.isSelected()) {
            TheLoai.add("LS01");
        }
        if (chkGT.isSelected()) {
            TheLoai.add("GT01");
        }
        if (chkVH.isSelected()) {
            TheLoai.add("VH01");
        }
        if (chkDL.isSelected()) {
            TheLoai.add("DL01");
        }

        // Gán danh sách thể loại cho đối tượng Sach
        nv.setTheLoai(TheLoai);

        // Gán mô tả
        nv.setMOTA(txtGhiChu.getText());

        return nv;
    }

    private void insert() {
        if (validateInsert() == true) {
            Sach s = this.getForm();
            try {
                sdao.insert(s); // thêm mới
                this.fillTable(); // đổ lại bảng
                this.clearForm(); // xóa trắng form
                JOptionPane.showMessageDialog(this, "Thêm thành công!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Thêm thất bại!");
                e.printStackTrace();
            }
        }
    }

    void update() {
        if (validateEdit() == true) {
            Sach s = getForm();
            try {
                sdao.update(s);
                this.fillTable();
                System.out.println(":");
                clearForm();
                JOptionPane.showMessageDialog(this, "Sửa thành công");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Sửa thất bại");
                e.printStackTrace();
            }
        }

    }

    private void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn Không có quyền xóa sách!");
        } else {
            String masach = txtMaSach.getText();
            if (MsgBox.confirm(this, "bạn thực sự muốn xóa sách này không?")) {
                try {
                    sdao.delete(masach);
                    this.fillTable();
                    this.clearForm();
                    JOptionPane.showMessageDialog(this, "Xóa thành công!");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Xóa thất bại!");
                    e.printStackTrace();
                }

            }
        }
    }

    private void first() {
        this.row = 0;
        this.edit();
        showsgreenline(row);
    }

    private void prev() {
        if (this.row > 0) {
            this.row--;
            showsgreenline(row);
            this.edit();
        }
    }

    private void next() {
        if (this.row < tblSach.getRowCount() - 1) {
            this.row++;
            showsgreenline(row);
            this.edit();
        }
    }

    private void last() {
        this.row = tblSach.getRowCount() - 1;
        showsgreenline(row);
        this.edit();
    }

    public void showsgreenline(int index) {

        //Hien dong xanh trong table moi khi nhan next,prev,first,last;
        tblSach.setRowSelectionInterval(index, index);
    }

    private void init() {
        new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date now = new Date();
                SimpleDateFormat formater = new SimpleDateFormat("hh:mm:ss a");
                String text = formater.format(now);

                lblDongHo.setText(text);
            }
        }).start();

//   setLocationRelativeTo(null);
        // setTitle("Quản Lý Sách");
        this.fillTable(); // đổ dữ liệu nhân viên vào bảng
        tblSach.setDefaultEditor(Object.class, null);
        tblNXB.setDefaultEditor(Object.class, null);
        tblTacGia.setDefaultEditor(Object.class, null);
        cboNXB.setSelectedItem("");
        cboTacGia.setSelectedItem("");
        fillComboBoxTG();
        fillComboBoxNXB();
        fillTableNXB();
        fillTableTacGia();
    }

    private void dienvao() {

        if (Auth_Sach.ten != null) {
            txtTimKiem.setText(Auth_Sach.ten.getTenSACH());
            fillTable();
            this.edit();
        }
        //   System.out.print(Auth_Sach.ten.getTenSACH());
    }

    public static boolean checkMaTG(JTextField txt) {
        SachDao sach = new SachDao();
        if (sach.selectByTacGia(txt.getText()) != null) {
            return true;
        }
        return false;
    }

    public static boolean checkMaNXB(JTextField txt) {
        SachDao sach = new SachDao();
        if (sach.selectByNXB(txt.getText()) != null) {
            return true;
        }
        return false;
    }

    public static boolean checkTrungMaSach(JTextField txt) {
        SachDao sach = new SachDao();
        if (sach.selectById(txt.getText()) == null) {
            return true;
        }
        return false;
    }

    public boolean checkName() {

        Matcher name = Pattern.compile(Name).matcher(txtTenSach.getText());
        if (!name.matches()) {
            lblTenSach.setText("Sai định dạng");
            txtTenSach.setBackground(Color.red);
            lblTenSach.setForeground(Color.red);
            return false;
        }
        return true;
    }

    public boolean validateInsert() {
        //Mã sách
        if (txtMaSach.getText().equals("")) {
            lblMaSach.setText("Chưa nhập mã sách");
            txtMaSach.setBackground(Color.red);
            return false;
        }

        if (checkTrungMaSach(txtMaSach) == false) {
            lblMaSach.setText("Mã sách đã có trong dữ liệu");
            txtMaSach.setBackground(Color.red);
            lblMaSach.setForeground(Color.RED);
            return false;
        }
        // tên sách
        if (txtTenSach.getText().equals("")) {
            lblTenSach.setText("Chưa nhập tên sách");
            txtTenSach.setBackground(Color.red);
            return false;
        }
        if (checkName() == false) {
            return false;
        }
//thể loại
        ArrayList<String> validateTL = new ArrayList<>();
        int count = 0;

        if (chkKD.isSelected()) {
            validateTL.add("KD01");
            count++;
        }
        if (chkSHelp.isSelected()) {
            validateTL.add("SH01");
            count++;
        }
        if (chkTA.isSelected()) {
            validateTL.add("TA01");
            count++;
        }
        if (chkTrHoc.isSelected()) {
            validateTL.add("TrH01");
            count++;
        }
        if (chkLS.isSelected()) {
            validateTL.add("LS01");
            count++;
        }
        if (chkGT.isSelected()) {
            validateTL.add("GT01");
            count++;
        }
        if (chkVH.isSelected()) {
            validateTL.add("VH01");
            count++;
        }
        if (chkDL.isSelected()) {
            validateTL.add("DL01");
            count++;
        }
        if (count == 0) {
            // Cập nhật văn bản cho nhãn
            // lbltheloai.setText("Chưa chọn thể loại");
        	ms = "Chưa chọn thể loại";
            JOptionPane.showMessageDialog(this, ms);
            return false;
        }
        if (cboTacGia.getSelectedItem().equals("")) {
//            lblMaTG.setText("Chưa chọn mã tác giả");
        	ms = "Chưa chọn mã tác giả";
            JOptionPane.showMessageDialog(this, ms);
            //cboTacGia.setBackground(Color.red);
            return false;
        }
        if (cboNXB.getSelectedItem().equals("")) {
        	ms = "Chưa chọn mã nhà xuất bản";
          //  lblNXB.setText("Chưa chọn mã nhà xuất bản");
              JOptionPane.showMessageDialog(this, ms);
           // cboNXB.setBackground(Color.red);
            return false;
        }
        return true;

    }

    public boolean validateEdit() {
        //Mã sách
        if (txtMaSach.getText().equals("")) {
            lblMaSach.setText("Chưa nhập mã sách");
            txtMaSach.setBackground(Color.red);
            return false;
        }

        if (checkTrungMaSach(txtMaSach) == true) {
            lblMaSach.setText("Mã sách phải có trong dữ liệu");
            txtMaSach.setBackground(Color.red);
            lblMaSach.setForeground(Color.RED);
            return false;
        }
        // tên sách
        if (txtTenSach.getText().equals("")) {
            lblTenSach.setText("Chưa nhập tên sách");
            txtTenSach.setBackground(Color.red);
            return false;
        }
        if (checkName() == false) {
            return false;
        }
//thể loại
        ArrayList<String> validateTL = new ArrayList<>();
        int count = 0;

        if (chkKD.isSelected()) {
            validateTL.add("KD01");
            count++;
        }
        if (chkSHelp.isSelected()) {
            validateTL.add("SH01");
            count++;
        }
        if (chkTA.isSelected()) {
            validateTL.add("TA01");
            count++;
        }
        if (chkTrHoc.isSelected()) {
            validateTL.add("TrH01");
            count++;
        }
        if (chkLS.isSelected()) {
            validateTL.add("LS01");
            count++;
        }
        if (chkGT.isSelected()) {
            validateTL.add("GT01");
            count++;
        }
        if (chkVH.isSelected()) {
            validateTL.add("VH01");
            count++;
        }
        if (chkDL.isSelected()) {
            validateTL.add("DL01");
            count++;
        }
        if (count == 0) {
            // Cập nhật văn bản cho nhãn
            // lbltheloai.setText("Chưa chọn thể loại");
        	ms = "Chưa chọn thể loại";
            JOptionPane.showMessageDialog(this, ms);
            return false;
        }
        return true;

    }

	public String getName() {
		return Name;
	}

	public void setName(String name) {
		Name = name;
	}

	public List<Sach> getList() {
		return list;
	}

	public void setList(List<Sach> list) {
		this.list = list;
	}

	public SachDao getSdao() {
		return sdao;
	}

	public void setSdao(SachDao sdao) {
		this.sdao = sdao;
	}

	public TacGiaDao getTgdao() {
		return tgdao;
	}

	public void setTgdao(TacGiaDao tgdao) {
		this.tgdao = tgdao;
	}

	public NXBDao getNxbdao() {
		return nxbdao;
	}

	public void setNxbdao(NXBDao nxbdao) {
		this.nxbdao = nxbdao;
	}

	public int getRow() {
		return row;
	}

	public void setRow(int row) {
		this.row = row;
	}

	public String getConnectionUrl() {
		return connectionUrl;
	}

	public void setConnectionUrl(String connectionUrl) {
		this.connectionUrl = connectionUrl;
	}

	public javax.swing.JLabel getQLNhanVIen() {
		return QLNhanVIen;
	}

	public void setQLNhanVIen(javax.swing.JLabel qLNhanVIen) {
		QLNhanVIen = qLNhanVIen;
	}

	public button.combobox.Combobox getCboNXB() {
		return cboNXB;
	}

	public void setCboNXB(button.combobox.Combobox cboNXB) {
		this.cboNXB = cboNXB;
	}

	public button.combobox.Combobox getCboTacGia() {
		return cboTacGia;
	}

	public void setCboTacGia(button.combobox.Combobox cboTacGia) {
		this.cboTacGia = cboTacGia;
	}

	public javax.swing.JCheckBox getChkDL() {
		return chkDL;
	}

	public void setChkDL(javax.swing.JCheckBox chkDL) {
		this.chkDL = chkDL;
	}

	public javax.swing.JCheckBox getChkGT() {
		return chkGT;
	}

	public void setChkGT(javax.swing.JCheckBox chkGT) {
		this.chkGT = chkGT;
	}

	public javax.swing.JCheckBox getChkKD() {
		return chkKD;
	}

	public void setChkKD(javax.swing.JCheckBox chkKD) {
		this.chkKD = chkKD;
	}

	public javax.swing.JCheckBox getChkLS() {
		return chkLS;
	}

	public void setChkLS(javax.swing.JCheckBox chkLS) {
		this.chkLS = chkLS;
	}

	public javax.swing.JCheckBox getChkSHelp() {
		return chkSHelp;
	}

	public void setChkSHelp(javax.swing.JCheckBox chkSHelp) {
		this.chkSHelp = chkSHelp;
	}

	public javax.swing.JCheckBox getChkTA() {
		return chkTA;
	}

	public void setChkTA(javax.swing.JCheckBox chkTA) {
		this.chkTA = chkTA;
	}

	public javax.swing.JCheckBox getChkTrHoc() {
		return chkTrHoc;
	}

	public void setChkTrHoc(javax.swing.JCheckBox chkTrHoc) {
		this.chkTrHoc = chkTrHoc;
	}

	public javax.swing.JCheckBox getChkVH() {
		return chkVH;
	}

	public void setChkVH(javax.swing.JCheckBox chkVH) {
		this.chkVH = chkVH;
	}

	public component.menu_1 getHeader() {
		return header;
	}

	public void setHeader(component.menu_1 header) {
		this.header = header;
	}

	public javax.swing.JLabel getjLabel10() {
		return jLabel10;
	}

	public void setjLabel10(javax.swing.JLabel jLabel10) {
		this.jLabel10 = jLabel10;
	}

	public javax.swing.JLabel getjLabel11() {
		return jLabel11;
	}

	public void setjLabel11(javax.swing.JLabel jLabel11) {
		this.jLabel11 = jLabel11;
	}

	public javax.swing.JLabel getjLabel12() {
		return jLabel12;
	}

	public void setjLabel12(javax.swing.JLabel jLabel12) {
		this.jLabel12 = jLabel12;
	}

	public javax.swing.JLabel getjLabel13() {
		return jLabel13;
	}

	public void setjLabel13(javax.swing.JLabel jLabel13) {
		this.jLabel13 = jLabel13;
	}

	public javax.swing.JLabel getjLabel7() {
		return jLabel7;
	}

	public void setjLabel7(javax.swing.JLabel jLabel7) {
		this.jLabel7 = jLabel7;
	}

	public javax.swing.JLabel getjLabel8() {
		return jLabel8;
	}

	public void setjLabel8(javax.swing.JLabel jLabel8) {
		this.jLabel8 = jLabel8;
	}

	public javax.swing.JLabel getjLabel9() {
		return jLabel9;
	}

	public void setjLabel9(javax.swing.JLabel jLabel9) {
		this.jLabel9 = jLabel9;
	}

	public javax.swing.JScrollPane getjScrollPane1() {
		return jScrollPane1;
	}

	public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
		this.jScrollPane1 = jScrollPane1;
	}

	public javax.swing.JScrollPane getjScrollPane2() {
		return jScrollPane2;
	}

	public void setjScrollPane2(javax.swing.JScrollPane jScrollPane2) {
		this.jScrollPane2 = jScrollPane2;
	}

	public javax.swing.JScrollPane getjScrollPane3() {
		return jScrollPane3;
	}

	public void setjScrollPane3(javax.swing.JScrollPane jScrollPane3) {
		this.jScrollPane3 = jScrollPane3;
	}

	public javax.swing.JLabel getLblDongHo() {
		return lblDongHo;
	}

	public void setLblDongHo(javax.swing.JLabel lblDongHo) {
		this.lblDongHo = lblDongHo;
	}

	public javax.swing.JLabel getLblMaSach() {
		return lblMaSach;
	}

	public void setLblMaSach(javax.swing.JLabel lblMaSach) {
		this.lblMaSach = lblMaSach;
	}

	public javax.swing.JLabel getLblMaTG() {
		return lblMaTG;
	}

	public void setLblMaTG(javax.swing.JLabel lblMaTG) {
		this.lblMaTG = lblMaTG;
	}

	public javax.swing.JLabel getLblNXB() {
		return lblNXB;
	}

	public void setLblNXB(javax.swing.JLabel lblNXB) {
		this.lblNXB = lblNXB;
	}

	public javax.swing.JLabel getLblTenSach() {
		return lblTenSach;
	}

	public void setLblTenSach(javax.swing.JLabel lblTenSach) {
		this.lblTenSach = lblTenSach;
	}

	public javax.swing.JLabel getLbltheloai() {
		return lbltheloai;
	}

	public void setLbltheloai(javax.swing.JLabel lbltheloai) {
		this.lbltheloai = lbltheloai;
	}

	public javax.swing.JPanel getMain() {
		return main;
	}

	public void setMain(javax.swing.JPanel main) {
		this.main = main;
	}

	public button.MyButton getMyButton1() {
		return myButton1;
	}

	public void setMyButton1(button.MyButton myButton1) {
		this.myButton1 = myButton1;
	}

	public button.MyButton getMyButton2() {
		return myButton2;
	}

	public void setMyButton2(button.MyButton myButton2) {
		this.myButton2 = myButton2;
	}

	public button.MyButton getMyButton3() {
		return myButton3;
	}

	public void setMyButton3(button.MyButton myButton3) {
		this.myButton3 = myButton3;
	}

	public button.MyButton getMyButton4() {
		return myButton4;
	}

	public void setMyButton4(button.MyButton myButton4) {
		this.myButton4 = myButton4;
	}

	public button.MyButton getMyButton5() {
		return myButton5;
	}

	public void setMyButton5(button.MyButton myButton5) {
		this.myButton5 = myButton5;
	}

	public button.MyButton getMyButton6() {
		return myButton6;
	}

	public void setMyButton6(button.MyButton myButton6) {
		this.myButton6 = myButton6;
	}

	public button.MyButton getMyButton7() {
		return myButton7;
	}

	public void setMyButton7(button.MyButton myButton7) {
		this.myButton7 = myButton7;
	}

	public button.MyButton getMyButton8() {
		return myButton8;
	}

	public void setMyButton8(button.MyButton myButton8) {
		this.myButton8 = myButton8;
	}

	public javax.swing.JTable getTblNXB() {
		return tblNXB;
	}

	public void setTblNXB(javax.swing.JTable tblNXB) {
		this.tblNXB = tblNXB;
	}

	public javax.swing.JTable getTblSach() {
		return tblSach;
	}

	public void setTblSach(javax.swing.JTable tblSach) {
		this.tblSach = tblSach;
	}

	public javax.swing.JTable getTblTacGia() {
		return tblTacGia;
	}

	public void setTblTacGia(javax.swing.JTable tblTacGia) {
		this.tblTacGia = tblTacGia;
	}

	public javax.swing.ButtonGroup getTheloai() {
		return theloai;
	}

	public void setTheloai(javax.swing.ButtonGroup theloai) {
		this.theloai = theloai;
	}

	public button.textfield.TextField getTxtGhiChu() {
		return txtGhiChu;
	}

	public void setTxtGhiChu(button.textfield.TextField txtGhiChu) {
		this.txtGhiChu = txtGhiChu;
	}

	public button.textfield.TextField getTxtMaSach() {
		return txtMaSach;
	}

	public void setTxtMaSach(button.textfield.TextField txtMaSach) {
		this.txtMaSach = txtMaSach;
	}

	public button.textfield.TextField getTxtTenSach() {
		return txtTenSach;
	}

	public void setTxtTenSach(button.textfield.TextField txtTenSach) {
		this.txtTenSach = txtTenSach;
	}

	public button.textfield.TextField getTxtTimKiem() {
		return txtTimKiem;
	}

	public void setTxtTimKiem(button.textfield.TextField txtTimKiem) {
		this.txtTimKiem = txtTimKiem;
	}

	public String getMs() {
		return ms;
	}

	public void setMs(String ms) {
		this.ms = ms;
	}


	
    
    
}
