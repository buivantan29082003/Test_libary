/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

//import Dao.QuenMKDAO;
import Dao.NhanVienDao;
import Entity.NhanVien;
import static form.QLNhanVien1.checkTrungMail;
import java.awt.Color;
import java.awt.Font;
import java.util.Properties;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import utils.Auth;
import utils.Auth_02;
import utils.MsgBox;
import utils.ramdom;

/**
 *
 * @author Admin
 */
public class QuenMatKhau extends javax.swing.JFrame {

    NhanVienDao dao = new NhanVienDao();
    private static final String P_Mail = "^[a-zA-Z0-9._%+-]+@(fpt\\.edu\\.vn|gmail\\.com)$";

    /**
     * Creates new form NewJFrame
     */
    public QuenMatKhau() {
        initComponents();
        init();
    }

    void guiOTP() {

        String combination = "0123456789";
        int len = 6;
        char[] maOTP = new char[len];
        Random r = new Random();
        for (int i = 0; i < len; i++) {
            maOTP[i] = combination.charAt(r.nextInt(combination.length()));
        }
        lblOTP.setText(new String(maOTP));

        final String username = "tranymy1505@gmail.com";
        final String password = "ubxbmpkrqfoyucju";

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        Session session = Session.getInstance(props, new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("tranymy1505@gmail.com"));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(txtEmail.getText()));
            message.setSubject("Mã xác nhận Gmail");
            message.setText(
                    "Xin chào bạn \n"
                    + "Chúng tôi muốn cho bạn biết rằng emai trên ứng dụng QUANLYTHUVIEN của bạn đã được xác nhận để lấy mã OTP.\n"
                    + "Mã OTP của bạn là: " + new String(maOTP) + ". \n"
                    + "Vui lòng truy cập vào form LayLaiMatKhau để tiến hành đặt lại mật khẩu ngay!\n"
                    + "Nếu bạn gặp sự cố, vui lòng liên hệ với bộ phận hỗ trợ thông qua email: \n"
                    + "tranymy1505@gmail.com hoặc email: duyvnpc05487@fpt.edu.vn\n"
                    + "Chúng tôi sẽ không bao giờ hỏi mật khẩu của bạn và "
                    + "chúng tôi đặc biệt không khuyến khích bạn chia sẻ mật khẩu đó với bất kỳ ai.\n"
                    + "Xin chân thành cảm ơn."
            );

            Transport.send(message);

            JOptionPane.showMessageDialog(this, "Gửi thành công mã OTP");

        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }

    boolean xacNhanOTP() {
//        System.out.println(lblOTP.getText());   
//        if (txtotp.getText().equals("") ){
//                        JOptionPane.showMessageDialog(this, "Không được để trống otp");
//
//        }
        if (txtotp.getText().equals(lblOTP.getText())) {
            JOptionPane.showMessageDialog(this, "Xác nhận thành công");

        } else {
            JOptionPane.showMessageDialog(this, "Nhập sai mã OTP vui lòng nhập lại");
            return false;

        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblOTP = new javax.swing.JLabel();
        menu_11 = new component.menu_1();
        jLabel3 = new javax.swing.JLabel();
        panelBorder1 = new swing.menu.PanelBorder();
        btnxacNhan = new button.MyButton();
        btnGui = new button.MyButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMacapcha = new button.textfield.TextField();
        txtEmail = new button.textfield.TextField();
        txtCapcha = new button.textfield.TextField();
        jLabel6 = new javax.swing.JLabel();
        txtotp = new button.textfield.TextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Quên mật khẩu");

        javax.swing.GroupLayout menu_11Layout = new javax.swing.GroupLayout(menu_11);
        menu_11.setLayout(menu_11Layout);
        menu_11Layout.setHorizontalGroup(
            menu_11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menu_11Layout.createSequentialGroup()
                .addContainerGap(265, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(251, 251, 251))
        );
        menu_11Layout.setVerticalGroup(
            menu_11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menu_11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        panelBorder1.setBackground(new java.awt.Color(255, 204, 204));
        panelBorder1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnxacNhan.setText("Xác Nhận");
        btnxacNhan.setRadius(12);
        btnxacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxacNhanActionPerformed(evt);
            }
        });
        panelBorder1.add(btnxacNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 232, 102, 33));

        btnGui.setText("Gửi");
        btnGui.setRadius(12);
        btnGui.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuiMouseClicked(evt);
            }
        });
        btnGui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuiActionPerformed(evt);
            }
        });
        panelBorder1.add(btnGui, new org.netbeans.lib.awtextra.AbsoluteConstraints(333, 232, 102, 33));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Email");
        panelBorder1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 57, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Capcha");
        panelBorder1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 122, -1, -1));

        txtMacapcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMacapchaActionPerformed(evt);
            }
        });
        panelBorder1.add(txtMacapcha, new org.netbeans.lib.awtextra.AbsoluteConstraints(304, 115, 100, -1));

        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        panelBorder1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 365, -1));

        txtCapcha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCapchaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCapchaFocusLost(evt);
            }
        });
        txtCapcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCapchaActionPerformed(evt);
            }
        });
        panelBorder1.add(txtCapcha, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 115, 170, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Enter OTP");
        panelBorder1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 175, -1, -1));

        txtotp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtotpFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtotpFocusLost(evt);
            }
        });
        txtotp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtotpActionPerformed(evt);
            }
        });
        panelBorder1.add(txtotp, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 168, 365, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/sync (1).png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        panelBorder1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, -1, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Mã");
        panelBorder1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 122, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Mã");
        panelBorder1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 122, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(menu_11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menu_11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnxacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxacNhanActionPerformed
        // TODO add your handling code here:
        if (kiemloi() == true) {
            if (xacNhanOTP() == true) {
                String email = txtEmail.getText();
                NhanVien nv = dao.selectByEmail(email);

                Auth_02.Email = nv;
                LayLaiMatKhau llmk = new LayLaiMatKhau();
                llmk.setVisible(true);
                this.dispose();
            }

        }

    }//GEN-LAST:event_btnxacNhanActionPerformed

    private void btnGuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuiActionPerformed
        if (kiemloi2()) {
            guiOTP();

        }
    }//GEN-LAST:event_btnGuiActionPerformed

    private void txtMacapchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMacapchaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMacapchaActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusGained
        // TODO add your handling code here:
//        if (txtEmail.getText().equalsIgnoreCase("Email...")) {
//            txtEmail.setText("");
//            txtEmail.setForeground(Color.black);
//        }
    }//GEN-LAST:event_txtEmailFocusGained

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        // TODO add your handling code here:
//        if (txtEmail.getText().equalsIgnoreCase("")) {
//            txtEmail.setText("Email...");
//            txtEmail.setForeground(Color.gray);
//        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtCapchaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCapchaFocusGained
//        // TODO add your handling code here:
//        if (txtCapcha.getText().equalsIgnoreCase("Capcha...")) {
//            txtCapcha.setText("");
//            txtCapcha.setForeground(Color.black);
//        }
    }//GEN-LAST:event_txtCapchaFocusGained

    private void txtCapchaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCapchaFocusLost
        // TODO add your handling code here:
//        if (txtCapcha.getText().equalsIgnoreCase("")) {
//            txtCapcha.setText("Capcha...");
//            txtCapcha.setForeground(Color.gray);
//        }
    }//GEN-LAST:event_txtCapchaFocusLost

    private void txtCapchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCapchaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCapchaActionPerformed

    private void txtotpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtotpFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtotpFocusGained

    private void txtotpFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtotpFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtotpFocusLost

    private void txtotpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtotpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtotpActionPerformed

    private void btnGuiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuiMouseClicked

    }//GEN-LAST:event_btnGuiMouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        maCapcha();
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuenMatKhau().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private button.MyButton btnGui;
    private button.MyButton btnxacNhan;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblOTP;
    private component.menu_1 menu_11;
    private swing.menu.PanelBorder panelBorder1;
    private button.textfield.TextField txtCapcha;
    private button.textfield.TextField txtEmail;
    private button.textfield.TextField txtMacapcha;
    private button.textfield.TextField txtotp;
    // End of variables declaration//GEN-END:variables

    void init() {
        hienthiGoiY();
        maCapcha();
        this.setLocationRelativeTo(null);

    }

    public void hienthiGoiY() {
        txtMacapcha.setForeground(Color.gray);
        txtMacapcha.setEditable(false);
        txtMacapcha.requestFocus();
    }

    public static boolean checkTrungMail(JTextField txt) {
        NhanVienDao nv = new NhanVienDao();
        if (nv.selectByEmail(txt.getText()) == null) {
            return true;
        }
        return false;
    }

    boolean kiemloi() {
        if (txtEmail.getText().equalsIgnoreCase("")) {
            txtEmail.requestFocus();
            MsgBox.alert(this, "Không để trống Email");
            return false;
        }
        Matcher Mail = Pattern.compile(P_Mail).matcher(txtEmail.getText());
        if (!Mail.matches()) {
            JOptionPane.showMessageDialog(this, "Sai định dạng mail!");
            return false;
        }
        if (checkTrungMail(txtEmail) == true) {
            JOptionPane.showMessageDialog(this, "Mail này phải có nhân viên sở hữu");

            return false;
        }

        if (txtCapcha.getText().equalsIgnoreCase("")) {
            //  System.out.println(txtCapcha.getText());
            txtCapcha.requestFocus();
            MsgBox.alert(this, "Không để trống Capcha");
            return false;
        }
        if (!txtCapcha.getText().equals(txtMacapcha.getText())) {
            txtCapcha.requestFocus();
            MsgBox.alert(this, "Mã capcha không khớp");
            maCapcha();
            return false;
        }

        if (txtotp.getText().equalsIgnoreCase("")) {
            //  System.out.println(txtCapcha.getText());
            txtCapcha.requestFocus();
            MsgBox.alert(this, "Không để trống mã otp");
            return false;
        }
        return true;
    }

    boolean kiemloi2() {
        if (txtEmail.getText().equals("")) {
            txtEmail.requestFocus();
            MsgBox.alert(this, "Không để trống Email");
            return false;
        }
        Matcher Mail = Pattern.compile(P_Mail).matcher(txtEmail.getText());
        if (!Mail.matches()) {
            JOptionPane.showMessageDialog(this, "Sai định dạng mail!");
            return false;
        }
   
        if (checkTrungMail(txtEmail) == true) {
            JOptionPane.showMessageDialog(this, "Mail này phải có nhân viên sở hữu");

            return false;
        }

        if (txtCapcha.getText().equals("")) {
            //  System.out.println(txtCapcha.getText());
            txtCapcha.requestFocus();
            MsgBox.alert(this, "Không để trống Capcha");
            return false;
        }
        if (!txtCapcha.getText().equals(txtMacapcha.getText())) {
            txtCapcha.requestFocus();
            MsgBox.alert(this, "Mã capcha không khớp");
            maCapcha();
            return false;
        }

        return true;
    }

    void maCapcha() {
        String capcha = new ramdom().soNgauNHIEN(5);
        txtMacapcha.setText(capcha);
        txtMacapcha.setFont(new Font(capcha, Font.HANGING_BASELINE, 14));
    }

    void lammoi() {
        // hienthiGoiY();
        maCapcha();
    }
    //     private String getRandomString(int n) {
//        String txt = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJLMNOPQRSTUVWXYZ1234567890";
//        StringBuilder sb = new StringBuilder();
//        while (n > 0) {
//            Random rd = new Random();
//            sb.append(txt.charAt(rd.nextInt(txt.length())));
//            n--;
//        }
//        return sb.toString();
//    }
// void hienmaOTP() {
//        String combination = "0123456789";
//        int len = 6;
//        char[] maOTP = new char[len];
//        Random r = new Random();
//        for (int i = 0; i < len; i++) {
//            maOTP[i] = combination.charAt(r.nextInt(combination.length()));
//        }
//        txtotp.setText(new String(maOTP));
//    }
//private void resetPass() {
//    if(kiemloi()){
//        try {
//             QuenMKDAO qmk  = new QuenMKDAO();
//            qmk.update(txtEmail.getText());
//            qmk.sendmail(txtEmail.getText());
//
//            System.out.println("The e-mail has been sent successfully!");
//            MsgBox.alert(this, "Email đã được gửi thành công. Vui lòng kiểm tra ngay!");
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        lammoi();
//    }
//    }
}
