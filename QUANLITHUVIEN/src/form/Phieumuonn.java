/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import Dao.DocGiaDao;
import Dao.NhanVienDao;
import Dao.PhieuMuonCTDao;
import Dao.PhieuMuonDao;

import Dao.SachDao;
import Entity.DocGia;
import Entity.PhieuMuon;
import Entity.PhieuMuonCT;
import Entity.Sach;
import com.toedter.calendar.JDateChooser;
import static form.QLNhanVien.checkTrungMaNV;
import static form.QLSach.checkTrungMaSach;
import static form.QLSinhVien.checkTrungMa;
import java.awt.Color;
import static java.awt.Color.pink;
import static java.awt.Color.white;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
//import jdk.internal.org.jline.keymap.KeyMap;
import slideshow.nhanvien;
import slideshow.phieumuon;
import slideshow.sach;
import slideshow.sinhvien;
import slideshow.thongke;
import utils.Auth;
import utils.MsgBox;
import utils.XDate;
import utils.XDate1;

/**
 *
 * @author duyvo
 */
public class Phieumuonn extends javax.swing.JPanel {

    SachDao sd = new SachDao();
    PhieuMuonCTDao pmctdao = new PhieuMuonCTDao();
    PhieuMuonDao pmdao = new PhieuMuonDao();
    int row = 0;
    String P_NSinh = "^(\\d{4})/(0[1-9]|1[0-2])/(0[1-9]|[12][0-9]|3[01])$";
    String P_So = "^[1-9][0-9]*$";

    String Mes = "";
    /**
     * Creates new form Phieumuonn
     */
    public Phieumuonn() {
        initComponents();
        fillSach();
        fillTable();
        init();
        this.fillTablePM();
        tblPhieuMuon.setDefaultEditor(Object.class, null);
        tblPhieuMuonCT.setDefaultEditor(Object.class, null);
        tblSach.setDefaultEditor(Object.class, null);
        tblSach2.setDefaultEditor(Object.class, null);
        txtMaSach.setVisible(false);
        lblMaS.setVisible(false);
        check();
        txtMaNV.setText(Auth.user.getMaNV());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        main = new javax.swing.JPanel();
        tab = new javax.swing.JTabbedPane();
        main1 = new javax.swing.JPanel();
        header = new component.menu_1();
        QLNhanVIen = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaPM = new button.textfield.TextField();
        jLabel11 = new javax.swing.JLabel();
        rdoDaTra = new javax.swing.JRadioButton();
        rdoChuaTra = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        txtMaDocGia = new button.textfield.TextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblPhieuMuon = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhieuMuon = new javax.swing.JTable();
        myButton1 = new button.MyButton();
        myButton3 = new button.MyButton();
        myButton4 = new button.MyButton();
        myButton7 = new button.MyButton();
        myButton8 = new button.MyButton();
        myButton5 = new button.MyButton();
        myButton6 = new button.MyButton();
        lblDongHo = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        txtMaNV = new button.textfield.TextField();
        lblmadocgia = new javax.swing.JLabel();
        lblpm = new javax.swing.JLabel();
        lblmanhanvien = new javax.swing.JLabel();
        lblngaytra = new javax.swing.JLabel();
        lblngaytao = new javax.swing.JLabel();
        myButton17 = new button.MyButton();
        myButton18 = new button.MyButton();
        DCNgTao = new com.toedter.calendar.JDateChooser();
        DCNgayTra = new com.toedter.calendar.JDateChooser();
        btnDatra = new button.MyButton();
        btnChtra = new button.MyButton();
        txtTimKiem = new button.textfield.TextField();
        jLabel14 = new javax.swing.JLabel();
        main2 = new javax.swing.JPanel();
        header1 = new component.menu_1();
        QLNhanVIen1 = new javax.swing.JLabel();
        lblDongHo1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblpm1 = new javax.swing.JLabel();
        txtMaPM1 = new button.textfield.TextField();
        lblMaS = new javax.swing.JLabel();
        txtSoLuong = new button.textfield.TextField();
        lblSoLuong = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtGhiChu = new button.textfield.TextField();
        lblPhieuMuon1 = new javax.swing.JLabel();
        myButton9 = new button.MyButton();
        myButton10 = new button.MyButton();
        myButton11 = new button.MyButton();
        myButton13 = new button.MyButton();
        myButton14 = new button.MyButton();
        myButton15 = new button.MyButton();
        myButton16 = new button.MyButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPhieuMuonCT = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSach2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSach = new javax.swing.JTable();
        btnXoaS = new javax.swing.JButton();
        btnThemVaoPhieuMuon = new javax.swing.JButton();
        txtMaSach = new button.textfield.TextField();
        btnLuuS = new javax.swing.JButton();
        lblDongHo2 = new javax.swing.JLabel();
        btnXoaPMCT = new button.MyButton();

        main.setBackground(new java.awt.Color(255, 204, 204));
        main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        main1.setBackground(new java.awt.Color(255, 204, 204));
        main1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        QLNhanVIen.setBackground(new java.awt.Color(102, 102, 102));
        QLNhanVIen.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        QLNhanVIen.setForeground(new java.awt.Color(255, 255, 255));
        QLNhanVIen.setText("Quản lí phiếu mượn");
        QLNhanVIen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                QLNhanVIenMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                QLNhanVIenMouseExited(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(QLNhanVIen)
                .addContainerGap(341, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(QLNhanVIen)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        main1.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel7.setText("Mã phiếu mượn:");
        main1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 91, -1, -1));

        txtMaPM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaPMFocusLost(evt);
            }
        });
        main1.add(txtMaPM, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 117, 259, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel11.setText("Trạng thái:");
        main1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, -1, -1));

        buttonGroup1.add(rdoDaTra);
        rdoDaTra.setText("Đã trả");
        rdoDaTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDaTraActionPerformed(evt);
            }
        });
        main1.add(rdoDaTra, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 64, 34));

        buttonGroup1.add(rdoChuaTra);
        rdoChuaTra.setText("Chưa trả");
        rdoChuaTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoChuaTraActionPerformed(evt);
            }
        });
        main1.add(rdoChuaTra, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, -1, 34));

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel10.setText("Mã nhân viên:");
        main1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 120, -1));

        txtMaDocGia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaDocGiaFocusLost(evt);
            }
        });
        txtMaDocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaDocGiaActionPerformed(evt);
            }
        });
        main1.add(txtMaDocGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 260, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel13.setText("Mã đọc giả:");
        main1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel8.setText("Ngày tạo:");
        main1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel9.setText("Ngày trả:");
        main1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 460, -1, -1));

        lblPhieuMuon.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        lblPhieuMuon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/4.png"))); // NOI18N
        lblPhieuMuon.setText("Phiếu mượn chi tiết");
        lblPhieuMuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPhieuMuonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblPhieuMuonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblPhieuMuonMouseExited(evt);
            }
        });
        main1.add(lblPhieuMuon, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 540, -1, -1));

        tblPhieuMuon.setBackground(new java.awt.Color(204, 204, 204));
        tblPhieuMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã phiếu mượn", "Trạng thái", "Mã nhân viên", "Mã đọc giả", "Ngày tạo", "Ngày trả"
            }
        ));
        tblPhieuMuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPhieuMuonMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhieuMuon);

        main1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 660, 380));

        myButton1.setText("Ngày tạo gần nhất");
        myButton1.setColorClick(new java.awt.Color(255, 204, 153));
        myButton1.setRadius(10);
        myButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton1ActionPerformed(evt);
            }
        });
        main1.add(myButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 80, 140, 30));

        myButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-pencil.png"))); // NOI18N
        myButton3.setRadius(10);
        myButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton3ActionPerformed(evt);
            }
        });
        main1.add(myButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 520, 50, 45));

        myButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bxs-news.png"))); // NOI18N
        myButton4.setRadius(10);
        myButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton4ActionPerformed(evt);
            }
        });
        main1.add(myButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 520, 50, 45));

        myButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/first-page-regular-24.png"))); // NOI18N
        myButton7.setRadius(10);
        myButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton7ActionPerformed(evt);
            }
        });
        main1.add(myButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 520, 50, 45));

        myButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-chevron-left.png"))); // NOI18N
        myButton8.setRadius(10);
        myButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton8ActionPerformed(evt);
            }
        });
        main1.add(myButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 520, 50, 45));

        myButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-chevron-right.png"))); // NOI18N
        myButton5.setRadius(10);
        myButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton5ActionPerformed(evt);
            }
        });
        main1.add(myButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 520, 50, 45));

        myButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-last-page.png"))); // NOI18N
        myButton6.setRadius(10);
        myButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton6ActionPerformed(evt);
            }
        });
        main1.add(myButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 520, 50, 45));

        lblDongHo.setText("Đồng hồ");
        main1.add(lblDongHo, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 570, 81, -1));
        main1.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtMaNV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaNVFocusLost(evt);
            }
        });
        main1.add(txtMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 260, -1));

        lblmadocgia.setForeground(new java.awt.Color(255, 0, 0));
        main1.add(lblmadocgia, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 250, 20));

        lblpm.setForeground(new java.awt.Color(255, 0, 0));
        main1.add(lblpm, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 250, 20));

        lblmanhanvien.setForeground(new java.awt.Color(255, 0, 0));
        main1.add(lblmanhanvien, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 250, 20));

        lblngaytra.setForeground(new java.awt.Color(255, 0, 0));
        main1.add(lblngaytra, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 520, 270, 20));

        lblngaytao.setForeground(new java.awt.Color(255, 0, 0));
        main1.add(lblngaytao, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 440, 270, 20));

        myButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-plus.png"))); // NOI18N
        myButton17.setColorClick(new java.awt.Color(255, 204, 153));
        myButton17.setRadius(10);
        myButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton17ActionPerformed(evt);
            }
        });
        main1.add(myButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 520, 50, 45));

        myButton18.setText("Ngày tạo xa nhất");
        myButton18.setColorClick(new java.awt.Color(255, 204, 153));
        myButton18.setRadius(10);
        myButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton18ActionPerformed(evt);
            }
        });
        main1.add(myButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 140, 30));
        main1.add(DCNgTao, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, 240, 30));
        main1.add(DCNgayTra, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 490, 240, 30));

        btnDatra.setText("Đã trả");
        btnDatra.setColorClick(new java.awt.Color(255, 204, 153));
        btnDatra.setRadius(10);
        btnDatra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatraActionPerformed(evt);
            }
        });
        main1.add(btnDatra, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 80, 80, 30));

        btnChtra.setText("Chưa trả");
        btnChtra.setColorClick(new java.awt.Color(255, 204, 153));
        btnChtra.setRadius(10);
        btnChtra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChtraActionPerformed(evt);
            }
        });
        main1.add(btnChtra, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 80, 80, 30));

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });
        main1.add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 80, 153, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel14.setText("Tìm kiếm:");
        main1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 60, -1, -1));

        tab.addTab("Phiếu mượn ", main1);

        main2.setBackground(new java.awt.Color(255, 204, 204));
        main2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        QLNhanVIen1.setBackground(new java.awt.Color(102, 102, 102));
        QLNhanVIen1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        QLNhanVIen1.setForeground(new java.awt.Color(255, 255, 255));
        QLNhanVIen1.setText("Quản lí phiếu mượn");
        QLNhanVIen1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                QLNhanVIen1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                QLNhanVIen1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout header1Layout = new javax.swing.GroupLayout(header1);
        header1.setLayout(header1Layout);
        header1Layout.setHorizontalGroup(
            header1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header1Layout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(QLNhanVIen1)
                .addContainerGap(341, Short.MAX_VALUE))
        );
        header1Layout.setVerticalGroup(
            header1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(QLNhanVIen1)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        main2.add(header1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));
        main2.add(lblDongHo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1035, 623, 70, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel12.setText("Mã phiếu mượn:");
        main2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 91, -1, -1));

        lblpm1.setForeground(new java.awt.Color(255, 0, 0));
        main2.add(lblpm1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 250, 20));

        txtMaPM1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaPM1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaPM1FocusLost(evt);
            }
        });
        txtMaPM1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaPM1ActionPerformed(evt);
            }
        });
        txtMaPM1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaPM1KeyReleased(evt);
            }
        });
        main2.add(txtMaPM1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 117, 259, -1));

        lblMaS.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        lblMaS.setText("Mã sách:");
        main2.add(lblMaS, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 530, 120, -1));

        txtSoLuong.setBackground(new java.awt.Color(204, 204, 204));
        txtSoLuong.setEnabled(false);
        txtSoLuong.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSoLuongCaretUpdate(evt);
            }
        });
        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });
        main2.add(txtSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 260, -1));

        lblSoLuong.setForeground(new java.awt.Color(255, 0, 0));
        main2.add(lblSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 250, 20));

        jLabel15.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel15.setText("Số lượng");
        main2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, -1, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        jLabel16.setText("Ghi chú:");
        main2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        txtGhiChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGhiChuActionPerformed(evt);
            }
        });
        main2.add(txtGhiChu, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 270, 150));

        lblPhieuMuon1.setFont(new java.awt.Font("Segoe UI Light", 3, 14)); // NOI18N
        lblPhieuMuon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/4.png"))); // NOI18N
        lblPhieuMuon1.setText("Phiếu mượn ");
        lblPhieuMuon1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPhieuMuon1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblPhieuMuon1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblPhieuMuon1MouseExited(evt);
            }
        });
        main2.add(lblPhieuMuon1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 470, -1, -1));

        myButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-plus.png"))); // NOI18N
        myButton9.setColorClick(new java.awt.Color(255, 204, 153));
        myButton9.setRadius(10);
        myButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton9ActionPerformed(evt);
            }
        });
        main2.add(myButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 520, 50, 45));

        myButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-pencil.png"))); // NOI18N
        myButton10.setRadius(10);
        myButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton10ActionPerformed(evt);
            }
        });
        main2.add(myButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 520, 50, 45));

        myButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bxs-news.png"))); // NOI18N
        myButton11.setRadius(10);
        myButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton11ActionPerformed(evt);
            }
        });
        main2.add(myButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 520, 50, 45));

        myButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/first-page-regular-24.png"))); // NOI18N
        myButton13.setRadius(10);
        myButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton13ActionPerformed(evt);
            }
        });
        main2.add(myButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 520, 50, 45));

        myButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-chevron-left.png"))); // NOI18N
        myButton14.setRadius(10);
        myButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton14ActionPerformed(evt);
            }
        });
        main2.add(myButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 520, 50, 45));

        myButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-chevron-right.png"))); // NOI18N
        myButton15.setRadius(10);
        myButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton15ActionPerformed(evt);
            }
        });
        main2.add(myButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 520, 50, 45));

        myButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-last-page.png"))); // NOI18N
        myButton16.setRadius(10);
        myButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton16ActionPerformed(evt);
            }
        });
        main2.add(myButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 520, 50, 45));

        tblPhieuMuonCT.setBackground(new java.awt.Color(204, 204, 204));
        tblPhieuMuonCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã phiếu mượn", "Mã Sách", "Số lượng sách", "Ghi chú"
            }
        ));
        tblPhieuMuonCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPhieuMuonCTMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblPhieuMuonCT);

        main2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 70, 390, 430));

        tblSach2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sách", "Tên Sách"
            }
        ));
        jScrollPane3.setViewportView(tblSach2);

        main2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 250, 160));

        tblSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã Sách", "Tên Sách"
            }
        ));
        tblSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblSachMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(tblSach);

        main2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, 250, 160));

        btnXoaS.setText("Xóa");
        btnXoaS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSActionPerformed(evt);
            }
        });
        main2.add(btnXoaS, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 460, -1, -1));

        btnThemVaoPhieuMuon.setText("Thêm");
        btnThemVaoPhieuMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemVaoPhieuMuonActionPerformed(evt);
            }
        });
        main2.add(btnThemVaoPhieuMuon, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 250, -1, -1));

        txtMaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSachActionPerformed(evt);
            }
        });
        main2.add(txtMaSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 550, 260, -1));

        btnLuuS.setText("Lưu");
        btnLuuS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuSActionPerformed(evt);
            }
        });
        main2.add(btnLuuS, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 460, -1, -1));

        lblDongHo2.setText("Đồng hồ");
        main2.add(lblDongHo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 570, 70, -1));

        btnXoaPMCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bx-x.png"))); // NOI18N
        btnXoaPMCT.setRadius(10);
        btnXoaPMCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaPMCTActionPerformed(evt);
            }
        });
        main2.add(btnXoaPMCT, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 520, 50, 45));

        tab.addTab("Phiếu mượn chi tiết", main2);

        main.add(tab, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));
        tab.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void QLNhanVIenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QLNhanVIenMouseEntered
        // TODO add your handling code here:
        //        QLNhanVIen.setForeground(new Color(255, 255, 0));
    }//GEN-LAST:event_QLNhanVIenMouseEntered

    private void QLNhanVIenMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QLNhanVIenMouseExited
        // TODO add your handling code here:
        //        QLNhanVIen.setForeground(new Color(242, 242, 242));
    }//GEN-LAST:event_QLNhanVIenMouseExited

    private void txtMaPMFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaPMFocusLost
        // TODO add your handling code here:
        if (txtMaPM.getText().equals("")) {
            lblpm.setText("Chưa nhập mã phiếu mượn");
            txtMaPM.setBackground(Color.red);

        } else if (checkTrungMaPM(txtMaPM) == false) {
            lblpm.setText("Mã phiếu mượn đã tồn tại");
            txtMaPM.setBackground(Color.red);
            lblpm.setForeground(Color.RED);

        } else {
            lblpm.setText("");
            txtMaPM.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtMaPMFocusLost

    private void rdoDaTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDaTraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoDaTraActionPerformed

    private void rdoChuaTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoChuaTraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoChuaTraActionPerformed

    private void txtMaDocGiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaDocGiaFocusLost
        // TODO add your handling code here:
        if (txtMaDocGia.getText().equals("")) {
            lblmadocgia.setText("Chưa nhập mã độc giả");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.red);
        } else if (checkTrungMaDG(txtMaDocGia) == false) {
            lblmadocgia.setText("Mã độc giả đã tồn tại");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.red);
        } else if (checkTrungMaDGNV(txtMaDocGia) == true) {
            lblmadocgia.setText("Mã độc giả không tồn tại");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.red);
        } else {
            lblmadocgia.setText("");
            txtMaDocGia.setBackground(Color.white);
            lblmadocgia.setForeground(Color.white);
        }
    }//GEN-LAST:event_txtMaDocGiaFocusLost

    private void txtMaDocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaDocGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaDocGiaActionPerformed

    private void lblPhieuMuonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPhieuMuonMouseClicked
        // TODO add your handling code here:
        tab.setSelectedIndex(1);
    }//GEN-LAST:event_lblPhieuMuonMouseClicked

    private void lblPhieuMuonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPhieuMuonMouseEntered
        // TODO add your handling code here:
        lblPhieuMuon.setForeground(new Color(153, 0, 153));
    }//GEN-LAST:event_lblPhieuMuonMouseEntered

    private void lblPhieuMuonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPhieuMuonMouseExited
        // TODO add your handling code here:

        lblPhieuMuon.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_lblPhieuMuonMouseExited

    private void tblPhieuMuonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuMuonMousePressed
        if (evt.getClickCount() == 2) {
            this.row = tblPhieuMuon.getSelectedRow();
            this.editPM();
        }
    }//GEN-LAST:event_tblPhieuMuonMousePressed

    private void myButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton1ActionPerformed
        filltableDesc();
    }//GEN-LAST:event_myButton1ActionPerformed

    private void myButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton3ActionPerformed
        updatePM();
    }//GEN-LAST:event_myButton3ActionPerformed

    private void myButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton4ActionPerformed
        clearFormPM();
    }//GEN-LAST:event_myButton4ActionPerformed

    private void myButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton7ActionPerformed
        firstPM();
    }//GEN-LAST:event_myButton7ActionPerformed

    private void myButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton8ActionPerformed
        prevPM();
    }//GEN-LAST:event_myButton8ActionPerformed

    private void myButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton5ActionPerformed
        nextPM();
    }//GEN-LAST:event_myButton5ActionPerformed

    private void myButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton6ActionPerformed
        lastPM();
    }//GEN-LAST:event_myButton6ActionPerformed

    private void txtMaNVFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaNVFocusLost
        // TODO add your handling code here:
        if (txtMaNV.getText().equals("")) {
            lblmanhanvien.setText("Chưa nhập mã nhân viên ");
            txtMaNV.setBackground(Color.red);
            lblmanhanvien.setForeground(Color.red);

        } else if (checkTrungMaNV(txtMaNV) == true) {
            lblmanhanvien.setText("Mã nhân viên không tồn tại");
            txtMaNV.setBackground(Color.red);
            lblmanhanvien.setForeground(Color.red);
        } else {
            lblmanhanvien.setText("");
            txtMaNV.setBackground(Color.white);
            lblmanhanvien.setForeground(Color.white);
        }


    }//GEN-LAST:event_txtMaNVFocusLost

    private void QLNhanVIen1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QLNhanVIen1MouseEntered
        // TODO add your handling code here:
        //        QLNhanVIen.setForeground(new Color(255, 255, 0));
    }//GEN-LAST:event_QLNhanVIen1MouseEntered

    private void QLNhanVIen1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QLNhanVIen1MouseExited
        // TODO add your handling code here:
        //        QLNhanVIen.setForeground(new Color(242, 242, 242));
    }//GEN-LAST:event_QLNhanVIen1MouseExited

    private void txtMaPM1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaPM1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaPM1FocusGained

    private void txtMaPM1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaPM1FocusLost
        // TODO add your handling code here:
        if (txtMaPM1.getText().equals("")) {
            lblpm1.setText("Chưa nhập mã phiếu mượn");
            txtMaPM1.setBackground(Color.red);

        } else if (checkTrungMaPM(txtMaPM) == true) {
            lblpm1.setText("Mã phiếu mượn không tồn tại");
            txtMaPM1.setBackground(Color.red);
        } else {
            lblpm1.setText("");
            txtMaPM1.setBackground(Color.white);
        }
    }//GEN-LAST:event_txtMaPM1FocusLost

    private void txtMaPM1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaPM1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaPM1ActionPerformed

    private void txtMaPM1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaPM1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaPM1KeyReleased

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoLuongActionPerformed

    private void txtGhiChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGhiChuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGhiChuActionPerformed

    private void lblPhieuMuon1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPhieuMuon1MouseClicked
        // TODO add your handling code here:
        tab.setSelectedIndex(0);
    }//GEN-LAST:event_lblPhieuMuon1MouseClicked

    private void lblPhieuMuon1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPhieuMuon1MouseEntered
        // TODO add your handling code here:
        lblPhieuMuon.setForeground(new Color(153, 0, 153));

    }//GEN-LAST:event_lblPhieuMuon1MouseEntered

    private void lblPhieuMuon1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPhieuMuon1MouseExited
        // TODO add your handling code here:

        lblPhieuMuon.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_lblPhieuMuon1MouseExited

    private void myButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton9ActionPerformed
        if (validatePMCT() == true) {
            insertPMCT();
        }

    }//GEN-LAST:event_myButton9ActionPerformed

    private void myButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton10ActionPerformed
        if (validateEditPMCT() == true) {
            update();
        }
    }//GEN-LAST:event_myButton10ActionPerformed

    private void myButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton11ActionPerformed
        clearForm();
    }//GEN-LAST:event_myButton11ActionPerformed

    private void myButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton13ActionPerformed
        first();
    }//GEN-LAST:event_myButton13ActionPerformed

    private void myButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton14ActionPerformed
        prev();
    }//GEN-LAST:event_myButton14ActionPerformed

    private void myButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton15ActionPerformed
        next();
    }//GEN-LAST:event_myButton15ActionPerformed

    private void myButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton16ActionPerformed
        last();
    }//GEN-LAST:event_myButton16ActionPerformed

    private void tblPhieuMuonCTMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuMuonCTMousePressed
        if (evt.getClickCount() == 2) {
            this.row = tblPhieuMuonCT.getSelectedRow();
            this.edit();

        }
    }//GEN-LAST:event_tblPhieuMuonCTMousePressed

    private void tblSachMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSachMousePressed
//                fillSach();
    }//GEN-LAST:event_tblSachMousePressed

    private void btnXoaSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSActionPerformed
        xoa();
    }//GEN-LAST:event_btnXoaSActionPerformed

    private void btnThemVaoPhieuMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemVaoPhieuMuonActionPerformed
        if (soLuong() == true) {
            them();
        }

    }//GEN-LAST:event_btnThemVaoPhieuMuonActionPerformed

    private void txtMaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSachActionPerformed

    private void btnLuuSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuSActionPerformed

        if (botrongSL() == true) {
            Luu();
        }

    }//GEN-LAST:event_btnLuuSActionPerformed

    private void myButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton17ActionPerformed
        // TODO add your handling code here:
        if (validateInsert() == true) {
            if (checkNgay(DCNgTao, DCNgayTra)) {
                insertPM();
                check();
            }
        }

    }//GEN-LAST:event_myButton17ActionPerformed

    private void myButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton18ActionPerformed
        // TODO add your handling code here:
        filltableAsc();
    }//GEN-LAST:event_myButton18ActionPerformed

    private void btnDatraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatraActionPerformed
        // TODO add your handling code here:
        filltableDaTra();
    }//GEN-LAST:event_btnDatraActionPerformed

    private void btnChtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChtraActionPerformed
        // TODO add your handling code here:
        filltableChuaTra();
    }//GEN-LAST:event_btnChtraActionPerformed

    private void txtSoLuongCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSoLuongCaretUpdate
        // TODO add your handling code here:
        if (txtSoLuong.getText() != null) {
            lblSoLuong.setText("");
            txtSoLuong.setBackground(Color.white);
            lblSoLuong.setForeground(Color.white);

        }
    }//GEN-LAST:event_txtSoLuongCaretUpdate

    private void btnXoaPMCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaPMCTActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaPMCTActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        fillTimKiem();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    public boolean validateInsert() {

        //Mã dg
        if (txtMaPM.getText().equals("")) {
            lblpm.setText("Chưa nhập mã phiếu mượn");
            txtMaPM.setBackground(Color.red);
            lblpm.setForeground(Color.RED);
            return false;
        }
        if (checkTrungMaPM(txtMaPM) == false) {
            lblpm.setText("Mã phiếu mượn đã tồn tại");
            txtMaPM.setBackground(Color.red);
            lblpm.setForeground(Color.RED);
            return false;
        }

//trang thai
        if (buttonGroup1.isSelected(null)) {
        	Mes = "Chưa chọn trạng thái !";
            JOptionPane.showMessageDialog(this, Mes);
            return false;
        }
        //ma nhan vien
        if (txtMaNV.getText().equals("")) {
            lblmanhanvien.setText("Chưa nhập mã nhân viên");
            txtMaNV.setBackground(Color.red);
            lblmanhanvien.setForeground(Color.RED);
            return false;
        }
        if (checkTrungMaNV(txtMaNV) == true) {
            lblmanhanvien.setText("Mã nhân viên chưa có trong dữ liệu");
            txtMaNV.setBackground(Color.red);
            lblmanhanvien.setForeground(Color.red);
            return false;
        }
        
        //ma doc gia
        if (txtMaDocGia.getText().equals("")) {
            lblmadocgia.setText("Chưa nhập mã độc giả");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.RED);
            return false;
        }
        if (checkTrungMaDG(txtMaDocGia) == false) {
            lblmadocgia.setText("Mã đọc giả phải chưa có trong phiếu mượn");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.red);
            return false;
        }
         if (checkTrungMaDGNV(txtMaDocGia) == true) {
            lblmadocgia.setText("Mã độc giả không tồn tại");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.red);
        } 
        if (txtMaDocGia.getText().equals("")) {
            lblmadocgia.setText("Chưa nhập mã độc giả");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.RED);
            return false;
        }
        if (DCNgTao.getDate() == null || DCNgTao.getDate().equals("")) {
            lblngaytao.setText("Chưa chọn ngày tạo");
            DCNgTao.setBackground(Color.red);
            lblngaytao.setForeground(Color.red);
            return false;
        }
        if (DCNgayTra.getDate() == null || DCNgayTra.getDate().equals("")) {
            lblngaytra.setText("Chưa chọn ngày trả");
            DCNgayTra.setBackground(Color.red);
            lblngaytra.setForeground(Color.red);
            return false;
        }
        if (DCNgTao.getDate().equals("")) {
            lblngaytao.setText("Chưa nhập ngày tạo");
            DCNgTao.setBackground(Color.red);
            lblngaytao.setBackground(Color.red);
        }

        return true;
    }

    public boolean validateEdit() {

        //Mã dg
        if (txtMaPM.getText().equals("")) {
            lblpm.setText("Chưa nhập mã phiếu mượn");
            txtMaPM.setBackground(Color.red);
            lblpm.setForeground(Color.RED);
            return false;
        }
        if (checkTrungMaPM(txtMaPM) == true) {
            lblpm.setText("Mã phiếu mượn không tồn tại");
            txtMaPM.setBackground(Color.red);
            lblpm.setForeground(Color.RED);
            return false;
        }
//trang thai
        if (buttonGroup1.isSelected(null)) {
        	Mes = "Chưa chọn trạng thái!";
            JOptionPane.showMessageDialog(this, "Chưa chọn trạng thái!");
            return false;
        }
        //ma nhan vien
        if (txtMaNV.getText().equals("")) {
            lblmanhanvien.setText("Chưa nhập mã nhân viên");
            txtMaNV.setBackground(Color.red);
            lblmanhanvien.setForeground(Color.RED);
            return false;
        }
        if (checkTrungMaNV(txtMaNV) == true) {
            lblmanhanvien.setText("Mã nhân viên chưa có trong dữ liệu");
            txtMaNV.setBackground(Color.red);
            lblmanhanvien.setForeground(Color.red);
            return false;
        }
        //ma doc gia
        if (txtMaDocGia.getText().equals("")) {
            lblmadocgia.setText("Chưa nhập mã độc giả");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.RED);
            return false;
        }
        if (checkTrungMaDG(txtMaDocGia) == true) {
            lblmadocgia.setText("Mã đọc giả phải có trong dữ liệu");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.red);
            return false;
        }
        if (checkTrungMaDGNV(txtMaDocGia) == true) {
            lblmadocgia.setText("Mã độc giả không tồn tại");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.red);
        } 
        if (txtMaDocGia.getText().equals("")) {
            lblmadocgia.setText("Chưa nhập mã độc giả");
            txtMaDocGia.setBackground(Color.red);
            lblmadocgia.setForeground(Color.RED);
            return false;
        }
        if (DCNgTao.getDate().equals("")) {
            lblngaytao.setText("Chưa nhập ngày tạo");
            DCNgTao.setBackground(Color.red);
            lblngaytao.setBackground(Color.red);
        }
//        if (checkNgayTao() == false) {
//            return false;
//        }

        if (DCNgTao.getDate().equals("")) {
            lblngaytra.setText("Chưa nhập ngày trả");
            DCNgayTra.setBackground(Color.red);
            lblngaytra.setBackground(Color.red);
        }
//        if (checkNgayTra() == false) {
//            return false;
//        }
        return true;
    }

    public boolean validatePMCT() {

        //Mã dg
        if (txtMaPM1.getText().equals("")) {
            lblpm1.setText("Chưa nhập mã phiếu mượn");
            txtMaPM1.setBackground(Color.red);
            lblpm1.setForeground(Color.RED);
            return false;
        }
        if (checkTrungMaPM(txtMaPM1) == true) {
            lblpm1.setText("Mã phiếu mượn không tồn tại");
            txtMaPM1.setBackground(Color.red);
            lblpm1.setForeground(Color.RED);
            return false;
        }
        if (txtSoLuong.getText().equals("")) {
            lblSoLuong.setText("Chưa nhập số lượng");
            txtSoLuong.setBackground(Color.red);
            lblSoLuong.setForeground(Color.RED);
            return false;
        }

        if (checkSL() == false) {
            return false;
        }
        return true;
    }

    public boolean validateEditPMCT() {

        //Mã dg
        if (txtMaPM1.getText().equals("")) {
            lblpm1.setText("Chưa nhập mã phiếu mượn");
            txtMaPM1.setBackground(Color.red);
            lblpm1.setForeground(Color.RED);
            return false;
        }
        if (checkTrungMaPM(txtMaPM1) == true) {
            lblpm1.setText("Mã phiếu mượn không tồn tại");
            txtMaPM1.setBackground(Color.red);
            lblpm1.setForeground(Color.RED);
            return false;
        }
        if (txtSoLuong.getText().equals("")) {
            lblSoLuong.setText("Chưa nhập số lượng");
            txtSoLuong.setBackground(Color.red);
            lblSoLuong.setForeground(Color.RED);
            return false;
        }

        if (checkSL() == false) {
            return false;
        }
        return true;
    }

//    public boolean checkNgayTao() {
//        Matcher NSinh = Pattern.compile(P_NSinh).matcher(txtNgayTao.getText());
//        if (!NSinh.matches()) {
//            lblngaytao.setText("Sai định dạng ngày tạo");
//            txtNgayTao.setBackground(Color.red);
//            lblngaytao.setForeground(Color.red);
//            return false;
//        }
//
//        return true;
//    }
//    public boolean checkNgayTra() {
//        Matcher NSinh = Pattern.compile(P_NSinh).matcher(txtNgayTra.getText());
//        if (!NSinh.matches()) {
//            lblngaytra.setText("Sai định dạng ngày trả");
//            txtNgayTra.setBackground(Color.red);
//            lblngaytra.setForeground(Color.red);
//            return false;
//        }
//
//        return true;
//    }
    public boolean checkNgay(JDateChooser txt, JDateChooser txt2) { //kiểm tra ngày khai giảng phải sau ngày tạo là 5 ngày
        txt.setBackground(white);

        Date date = txt.getDate();
        Date date2 = txt2.getDate();
        Calendar c1 = Calendar.getInstance();
        Calendar c2 = Calendar.getInstance();
        c1.setTime(date);
        c2.setTime(date2);
        long a = (c2.getTime().getTime() - c1.getTime().getTime()) / (24 * 3600 * 1000);
        if (a >= 0) {
            return true;
        } else {
            txt.setBackground(pink);
            MsgBox.showMessageDialog(this, " Ngày trả phải sau ngày trả ít nhất trong ngày hôm nay");
            return false;
        }
    }

    public void fillSach() {
        DefaultTableModel model = (DefaultTableModel) tblSach.getModel();
        model.setRowCount(0);
        try {
            List<Sach> list = sd.selectAll();
            for (Sach s : list) {
                Object[] row = {
                    s.getMaSACH(),
                    s.getTenSACH()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu !");
            e.printStackTrace();
        }
    }

    public void them() {
        DefaultTableModel model2 = (DefaultTableModel) tblSach2.getModel();
        int selectedRowIndex = tblSach.getSelectedRow();
        if (selectedRowIndex != -1) {
            String maS = (String) tblSach.getValueAt(selectedRowIndex, 0);
            String tenS = (String) tblSach.getValueAt(selectedRowIndex, 1);
            model2.addRow(new Object[]{maS, tenS});
        }
    }

    public void xoa() {
        int selectedRowIndex = tblSach2.getSelectedRow();
        if (selectedRowIndex != -1) {
            DefaultTableModel model = (DefaultTableModel) tblSach2.getModel();
            model.removeRow(selectedRowIndex);
        }
    }

    public void Luu() {
        try {
            DefaultTableModel model2 = (DefaultTableModel) tblSach2.getModel();
            int rowCount = model2.getRowCount();

            StringBuilder maSachBuilder = new StringBuilder();//để xây dựng chuỗi chứa các giá trị của cột đầu tiên từ mỗi dòng

            for (int row = 0; row < rowCount; row++) {//được sử dụng để duyệt qua từng dòng trong bảng tblSach2
                String maS = (String) model2.getValueAt(row, 0);
                maSachBuilder.append(maS).append(", ");//Giá trị maS được thêm vào maSachBuilder bằng cách sử dụng phương thức append(), cùng với dấu phẩy và khoảng trắng.
            }

            String maSach = maSachBuilder.toString();
            maSach = maSach.substring(0, maSach.length() - 2); // Xóa dấu ',' cuối cùng

            txtMaSach.setText(maSach);
            txtSoLuong.setText(String.valueOf(rowCount));
            JOptionPane.showMessageDialog(this, "Thêm thành công!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Thêm thất bại!");
            e.printStackTrace();
        }
    }
//---------------------------PhieuMuonChiTiet-----------------------------------

    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblPhieuMuonCT.getModel();
        model.setRowCount(0);
        try {
            List<PhieuMuonCT> list = pmctdao.selectAll();
            for (PhieuMuonCT pm : list) {
                Object[] row = {
                    pm.getMaPM(),
                    String.join(",", pm.getMaSach()),
                    pm.getSoLuong(),
                    pm.getGhiChu()};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu phiếu mượn chi tiết!");
            e.printStackTrace();
        }
    }

    private void fillTimKiem() {
        DefaultTableModel model = (DefaultTableModel) tblPhieuMuon.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtTimKiem.getText();

            List<PhieuMuon> list =  pmdao.selectByKeyword(keyword);
            //   List<Sach> list = sdao.selectAll();
            for (PhieuMuon pm : list) {
               Object[] row = {
                    pm.getMaPM(),
                    pm.isTRANGTHAI() ? "Đã Trả" : "Chưa Trả",
                    pm.getMaNV(),
                    pm.getMaDG(),
                    pm.getNGAYTAO(),
                    pm.getNGAYTRA(),};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu !");
            e.printStackTrace();
        }
    }

    private void insertPMCT() {

        //if (validateInsert() == true) {  
        PhieuMuonCT pmct = this.getForm();
        System.out.println("form.Phieumuonn.insertPMCT()");
        try {
            pmctdao.insert(pmct); // thêm mới
            this.fillTable(); // đỗ lại bảng
            this.clearForm(); // xóa trắng form
            JOptionPane.showMessageDialog(this, "Thêm phiếu mượn chi tiết mới thành công!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Thêm phiếu mượn chi tiết mới thất bại!");
            e.printStackTrace();

            //   }
        }

    }

    private void insertPM() {
        if (validateInsert() == true) {
            PhieuMuon pm = this.getFormPM();

            try {
                pmdao.insert(pm); // thêm mới
                this.fillTablePM();// đỗ lại bảng
                this.clearFormPM();// xóa trắng form
                JOptionPane.showMessageDialog(this, "Thêm phiếu mượn mới thành công!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Thêm phiếu mượn mới thất bại!");
                e.printStackTrace();

            }
        }

    }

    private void update() {
        PhieuMuonCT pm = this.getForm();

        try {
            pmctdao.update(pm); // cập nhật
            this.fillTable(); // đổ lại bảng
            JOptionPane.showMessageDialog(this, "Cập nhật phiếu mượn chi tiết thành công!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cập nhật phiếu mượn chi tiết thất bại!");
            e.printStackTrace();
        }

    }

    private void delete() {

        String mapm = txtMaPM1.getText();
        if (MsgBox.confirm(this, "Bạn có thực sự muốn xóa phiếu mượn chi tiết này không?")) {
            try {
                pmctdao.delete(mapm);
                this.fillTable();
                this.clearForm();
                MsgBox.alert(this, "Xóa phiếu mượn chi tiết thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa phiếu mượn chi tiết thất bại!");
                e.printStackTrace();
            }
        }

    }

    private void clearForm() {
        txtGhiChu.setText(null);
        txtMaPM1.setText(null);
        txtMaSach.setText(null);
        txtSoLuong.setText(null);
        txtGhiChu.setText(null);
        tblSach2.clearSelection();
        DefaultTableModel model = (DefaultTableModel) tblSach2.getModel();
        model.setRowCount(0);
//        this.updateStatus();
    }

    private void edit() {
        try {
            String mapm = (String) tblPhieuMuonCT.getValueAt(this.row, 0);
            PhieuMuonCT pmct = pmctdao.selectById(mapm);
            if (pmct != null) {
                this.setForm(pmct);
                jTabbedPane2.setSelectedIndex(0);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void setForm(PhieuMuonCT pm) {
        txtMaPM1.setText(pm.getMaPM());
        ArrayList<String> maSachList = pm.getMaSach();
//        StringBuilder maSachBuilder = new StringBuilder();
//        for (String maSach : maSachList) {
//            maSachBuilder.append(maSach).append("\n");
//        }
//
//        txtMaSach.setText(maSachBuilder.toString());
        txtSoLuong.setText(String.valueOf(pm.getSoLuong()));
        txtGhiChu.setText(pm.getGhiChu());

        int rowIndex = tblPhieuMuonCT.getSelectedRow();
        Object columnData = tblPhieuMuonCT.getValueAt(rowIndex, 1);
        DefaultTableModel model = (DefaultTableModel) tblSach2.getModel();
        model.setRowCount(0);
        System.out.println("a: " + columnData);
        String mapm = (String) tblPhieuMuonCT.getValueAt(this.row, 0);
        List<Object[]> list = pmctdao.selectBySach(mapm);
        for (Object[] row : list) {
            model.addRow(new Object[]{row[0], row[1]});

        }

    }

    private PhieuMuonCT getForm() {

        PhieuMuonCT pmct = new PhieuMuonCT();
        pmct.setMaPM(txtMaPM1.getText());
        ArrayList<String> MasachList = new ArrayList<>();

        String maSach = txtMaSach.getText();
        String[] maSachArray = maSach.split(","); // Giả sử mã sách được phân tách bằng dấu phẩy (,)

        for (String maSachItem : maSachArray) {
            MasachList.add(maSachItem);
        }

        pmct.setMaSach(MasachList);
        pmct.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        pmct.setGhiChu(txtGhiChu.getText());

        return pmct;
    }

    private void first() {
        this.row = 0;
        this.edit();
    }

    private void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    private void next() {
        if (this.row < tblPhieuMuonCT.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
    }

    private void last() {
        this.row = tblPhieuMuonCT.getRowCount() - 1;
        this.edit();
    }

    //----------------------PhieuMuon-----------------------------
    private void fillTablePM() {
        DefaultTableModel model = (DefaultTableModel) tblPhieuMuon.getModel();
        model.setRowCount(0);
        try {
            List<Entity.PhieuMuon> list = pmdao.selectAll();
            for (Entity.PhieuMuon pm : list) {
                Object[] row = {
                    pm.getMaPM(),
                    pm.isTRANGTHAI() ? "Đã Trả" : "Chưa Trả",
                    pm.getMaNV(),
                    pm.getMaDG(),
                    XDate.toString(pm.getNGAYTAO()),
                    XDate.toString(pm.getNGAYTRA()),};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu phiếu mượn!");
            e.printStackTrace();
        }
    }

    private void filltableDesc() {
        DefaultTableModel model = (DefaultTableModel) tblPhieuMuon.getModel();
        model.setRowCount(0);
        try {
            List<Entity.PhieuMuon> list = pmdao.selectAllDESC();
            for (Entity.PhieuMuon pm : list) {
                Object[] row = {
                    pm.getMaPM(),
                    pm.isTRANGTHAI() ? "Đã Trả" : "Chưa Trả",
                    pm.getMaNV(),
                    pm.getMaDG(),
                    XDate.toString(pm.getNGAYTAO()),
                    XDate.toString(pm.getNGAYTRA()),};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu phiếu mượn!");
            e.printStackTrace();
        }
    }

    private void filltableAsc() {
        DefaultTableModel model = (DefaultTableModel) tblPhieuMuon.getModel();
        model.setRowCount(0);
        try {
            List<Entity.PhieuMuon> list = pmdao.selectAllASC();
            for (Entity.PhieuMuon pm : list) {
                Object[] row = {
                    pm.getMaPM(),
                    pm.isTRANGTHAI() ? "Đã Trả" : "Chưa Trả",
                    pm.getMaNV(),
                    pm.getMaDG(),
                    XDate.toString(pm.getNGAYTAO()),
                    XDate.toString(pm.getNGAYTRA()),};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu phiếu mượn!");
            e.printStackTrace();
        }
    }

    private void updatePM() {
        if (validateEdit() == true) {
            Entity.PhieuMuon pm = this.getFormPM();

            try {
                pmdao.update(pm); // cập nhật
                this.fillTablePM(); // đổ lại bảng
                JOptionPane.showMessageDialog(this, "Cập nhật phiếu mượn thành công!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Cập nhật phiếu mượn thất bại!");
                e.printStackTrace();
            }
        }

    }

    private void deletePM() {

        String mapm = txtMaPM.getText();
        if (MsgBox.confirm(this, "Bạn có thực sự muốn xóa phiếu mượn này không?")) {
            try {
                pmdao.delete(mapm);
                this.fillTablePM();
                this.clearFormPM();
                MsgBox.alert(this, "Xóa phiếu mượn thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa phiếu mượn thất bại!");
                e.printStackTrace();
            }
        }

    }

    private void clearFormPM() {
        Entity.PhieuMuon pm = new Entity.PhieuMuon();
        this.setForm2PM(pm);
        this.row = -1;
        txtMaNV.setText(Auth.user.getMaNV());
    }

    private void editPM() {
        try {
            String mapm = (String) tblPhieuMuon.getValueAt(this.row, 0);
            Entity.PhieuMuon pm = pmdao.selectById(mapm);
            if (pm != null) {
                this.setFormPM(pm);
                tab.setSelectedIndex(0);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void setForm2PM(Entity.PhieuMuon pm) {
        txtMaPM.setText(pm.getMaPM());
        buttonGroup1.clearSelection();
        txtMaNV.setText(pm.getMaNV());
        txtMaDocGia.setText(pm.getMaDG());
        DCNgTao.setDate(pm.getNGAYTAO());
        DCNgayTra.setDate(pm.getNGAYTRA());

    }

    private void setFormPM(Entity.PhieuMuon pm) {
        txtMaPM.setText(pm.getMaPM());
        rdoDaTra.setSelected(pm.isTRANGTHAI());
        rdoChuaTra.setSelected(!pm.isTRANGTHAI());
        txtMaNV.setText(pm.getMaNV());
        txtMaDocGia.setText(pm.getMaDG());
        DCNgTao.setDate(pm.getNGAYTAO());
        DCNgayTra.setDate(pm.getNGAYTRA());
        txtMaPM1.setText(pm.getMaPM());

    }

    private Entity.PhieuMuon getFormPM() {
        Entity.PhieuMuon pm = new Entity.PhieuMuon();
        pm.setMaPM(txtMaPM.getText());
        pm.setTRANGTHAI(rdoDaTra.isSelected());
        pm.setMaNV(Auth.user.getMaNV());
        pm.setMaDG(txtMaDocGia.getText());
        pm.setNGAYTAO(DCNgTao.getDate());
        pm.setNGAYTRA(DCNgayTra.getDate());

        return pm;
    }

    private void firstPM() {
        this.row = 0;
        this.editPM();
    }

    private void prevPM() {
        if (this.row > 0) {
            this.row--;
            this.editPM();
        }
    }

    private void nextPM() {
        if (this.row < tblPhieuMuon.getRowCount() - 1) {
            this.row++;
            this.editPM();
        }
    }

    private void lastPM() {
        this.row = tblPhieuMuon.getRowCount() - 1;
        this.editPM();
    }

    public void check() {
        txtMaPM.setText("");
        txtMaPM1.setText("");
        txtMaSach.setText("");
        txtMaDocGia.setText("");
        DCNgTao.setDate(null);
        DCNgayTra.setDate(null);

    }

    public boolean soLuong() {
        DefaultTableModel model2 = (DefaultTableModel) tblSach2.getModel();
        int rowCount = model2.getRowCount();
        if (rowCount > 2) {
            JOptionPane.showMessageDialog(this, "Số lượng sách không được lớn hơn 3");
            return false;
        }
        return true;
    }

    public boolean botrongSL() {
        DefaultTableModel model2 = (DefaultTableModel) tblSach2.getModel();
        int rowCount = model2.getRowCount();
        if (rowCount <= 0) {
            JOptionPane.showMessageDialog(this, "Phải chọn ít nhất 1 sách");
            return false;
        }
        return true;
    }

    public boolean checkSL() {

        Matcher name = Pattern.compile(P_So).matcher(txtSoLuong.getText());
        if (!name.matches()) {
            lblSoLuong.setText("Sai định dạng");
            txtSoLuong.setBackground(Color.red);
            lblSoLuong.setForeground(Color.red);
            return false;
        }
        return true;
    }

    public static boolean checkTrungMaPM(JTextField txt) {
        PhieuMuonDao pmct = new PhieuMuonDao();
        if (pmct.selectById(txt.getText()) == null) {
            return true;
        }
        return false;
    }

    public static boolean checkTrungMaNV(JTextField txt) {
        NhanVienDao nv = new NhanVienDao();
        if (nv.selectById(txt.getText()) == null) {
            return true;
        }
        return false;
    }

    public static boolean checkTrungMaDG(JTextField txt) {
        PhieuMuonDao nv = new PhieuMuonDao();
        if (nv.selectByMa(txt.getText()) == null) {
            return true;
        }
        return false;
    }
      public static boolean checkTrungMaDGNV(JTextField txt) {
          DocGiaDao nv = new DocGiaDao();
        if (nv.selectById(txt.getText()) == null) {
            return true;
        }
        return false;
    }

    private void init() {

        new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date now = new Date();
                SimpleDateFormat formater = new SimpleDateFormat("hh:mm:ss a");
                String text = formater.format(now);

                lblDongHo.setText(text);
                lblDongHo2.setText(text);
            }
        }).start();

        this.setBackground(new Color(255, 255, 255));

        setBackground(new Color(0, 0, 0, 0));  //  Remove background

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DCNgTao;
    private com.toedter.calendar.JDateChooser DCNgayTra;
    private javax.swing.JLabel QLNhanVIen;
    private javax.swing.JLabel QLNhanVIen1;
    private button.MyButton btnChtra;
    private button.MyButton btnDatra;
    private javax.swing.JButton btnLuuS;
    private javax.swing.JButton btnThemVaoPhieuMuon;
    private button.MyButton btnXoaPMCT;
    private javax.swing.JButton btnXoaS;
    private javax.swing.ButtonGroup buttonGroup1;
    private component.menu_1 header;
    private component.menu_1 header1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblDongHo;
    private javax.swing.JLabel lblDongHo1;
    private javax.swing.JLabel lblDongHo2;
    private javax.swing.JLabel lblMaS;
    private javax.swing.JLabel lblPhieuMuon;
    private javax.swing.JLabel lblPhieuMuon1;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblmadocgia;
    private javax.swing.JLabel lblmanhanvien;
    private javax.swing.JLabel lblngaytao;
    private javax.swing.JLabel lblngaytra;
    private javax.swing.JLabel lblpm;
    private javax.swing.JLabel lblpm1;
    private javax.swing.JPanel main;
    private javax.swing.JPanel main1;
    private javax.swing.JPanel main2;
    private button.MyButton myButton1;
    private button.MyButton myButton10;
    private button.MyButton myButton11;
    private button.MyButton myButton13;
    private button.MyButton myButton14;
    private button.MyButton myButton15;
    private button.MyButton myButton16;
    private button.MyButton myButton17;
    private button.MyButton myButton18;
    private button.MyButton myButton3;
    private button.MyButton myButton4;
    private button.MyButton myButton5;
    private button.MyButton myButton6;
    private button.MyButton myButton7;
    private button.MyButton myButton8;
    private button.MyButton myButton9;
    private javax.swing.JRadioButton rdoChuaTra;
    private javax.swing.JRadioButton rdoDaTra;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTable tblPhieuMuon;
    private javax.swing.JTable tblPhieuMuonCT;
    private javax.swing.JTable tblSach;
    private javax.swing.JTable tblSach2;
    private button.textfield.TextField txtGhiChu;
    private button.textfield.TextField txtMaDocGia;
    private button.textfield.TextField txtMaNV;
    private button.textfield.TextField txtMaPM;
    private button.textfield.TextField txtMaPM1;
    private button.textfield.TextField txtMaSach;
    private button.textfield.TextField txtSoLuong;
    private button.textfield.TextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void filltableChuaTra() {
        DefaultTableModel model = (DefaultTableModel) tblPhieuMuon.getModel();
        model.setRowCount(0);
        try {
            List<Entity.PhieuMuon> list = pmdao.selectAllChuaTra();
            for (Entity.PhieuMuon pm : list) {
                Object[] row = {
                    pm.getMaPM(),
                    pm.isTRANGTHAI() ? "Đã Trả" : "Chưa Trả",
                    pm.getMaNV(),
                    pm.getMaDG(),
                    pm.getNGAYTAO(),
                    pm.getNGAYTRA(),};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu phiếu mượn!");
            e.printStackTrace();
        }
    }

    private void filltableDaTra() {
        DefaultTableModel model = (DefaultTableModel) tblPhieuMuon.getModel();
        model.setRowCount(0);
        try {
            List<Entity.PhieuMuon> list = pmdao.selectAllDaTra();
            for (Entity.PhieuMuon pm : list) {
                Object[] row = {
                    pm.getMaPM(),
                    pm.isTRANGTHAI() ? "Đã Trả" : "Chưa Trả",
                    pm.getMaNV(),
                    pm.getMaDG(),
                    pm.getNGAYTAO(),
                    pm.getNGAYTRA(),};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu phiếu mượn!");
            e.printStackTrace();
        }
    }

    void insert1() {
        PhieuMuonCT pm = new PhieuMuonCT();
        pm.setMaPM(txtMaPM1.getText());
        pm.setSoLuong(Integer.parseInt(txtSoLuong.getText()));

        pmctdao.insert(pm);
    }

    void xuathoadon() {
        int line = tblPhieuMuonCT.getRowCount();
        try {
            // Ghi dữ liệu vào tệp hóa đơn
            // ...
            Writer bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("help/" + "HD IT_Coffee" + ".txt"), "UTF-8"));
            bw.write("\t\t\tIT_Coffee\r\n\r\n");
            bw.write("\t\t FPT POLYTECHNIC \r\n");
            bw.write("\t\t\tHÓA ĐƠN BÁN HÀNG\r\n\r\n");
            bw.write("Mã hóa đơn: " + txtMaPM1.getText() + "\r\n");
            bw.write("NHÂN VIÊN: " + txtMaNV.getText() + "\r\n");
            bw.write("----------------------------------------------------------------\r\n");
            bw.write("Mã\t\tLoại SP \tKích thước\tSố lượng\tĐơn Giá\r\n");
            bw.write("----------------------------------------------------------------\r\n");
            //Ghi sản phẩm
//            int quantotal = 0;
//            for (int i = 0; i < line; i++) {
////                String ma = (String) tblBanHang.getValueAt(i, 0);
////                String ten = (String) tblBanHang.getValueAt(i, 1);
////                String loai = (String) tblBanHang.getValueAt(i, 2);
////                String size = String.valueOf(tblBanHang.getValueAt(i, 3));
////                String soluong = String.valueOf(tblBanHang.getValueAt(i, 4));
////                String dongia = String.valueOf(tblBanHang.getValueAt(i, 5));
//                bw.write((i + 1) + ". " + ten + "\r\n");
//                bw.write(ma + "\t" + loai + "\t\t" + size + "\t\t" + soluong + "\t" + dongia + "\r\n\r\n");
//            }

            bw.write("---------------------CÁM ƠN QUÝ KHÁCH!----------------------");
            bw.close();
            // Mở tệp hóa đơn bằng trình soạn thảo mặc định trên hệ thống
            File file = new File("help/HD IT_Coffee.txt");
            Desktop desktop = Desktop.getDesktop();
            desktop.open(file);
        } catch (IOException e) {
            System.out.println("Lỗi khi xuất hóa đơn hoặc mở tệp: " + e.getMessage());
        }
    }

	public SachDao getSd() {
		return sd;
	}

	public void setSd(SachDao sd) {
		this.sd = sd;
	}

	public PhieuMuonCTDao getPmctdao() {
		return pmctdao;
	}

	public void setPmctdao(PhieuMuonCTDao pmctdao) {
		this.pmctdao = pmctdao;
	}

	public PhieuMuonDao getPmdao() {
		return pmdao;
	}

	public void setPmdao(PhieuMuonDao pmdao) {
		this.pmdao = pmdao;
	}

	public int getRow() {
		return row;
	}

	public void setRow(int row) {
		this.row = row;
	}

	public String getP_NSinh() {
		return P_NSinh;
	}

	public void setP_NSinh(String p_NSinh) {
		P_NSinh = p_NSinh;
	}

	public String getP_So() {
		return P_So;
	}

	public void setP_So(String p_So) {
		P_So = p_So;
	}

	public com.toedter.calendar.JDateChooser getDCNgTao() {
		return DCNgTao;
	}

	public void setDCNgTao(com.toedter.calendar.JDateChooser dCNgTao) {
		DCNgTao = dCNgTao;
	}

	public com.toedter.calendar.JDateChooser getDCNgayTra() {
		return DCNgayTra;
	}

	public void setDCNgayTra(com.toedter.calendar.JDateChooser dCNgayTra) {
		DCNgayTra = dCNgayTra;
	}

	public javax.swing.JLabel getQLNhanVIen() {
		return QLNhanVIen;
	}

	public void setQLNhanVIen(javax.swing.JLabel qLNhanVIen) {
		QLNhanVIen = qLNhanVIen;
	}

	public javax.swing.JLabel getQLNhanVIen1() {
		return QLNhanVIen1;
	}

	public void setQLNhanVIen1(javax.swing.JLabel qLNhanVIen1) {
		QLNhanVIen1 = qLNhanVIen1;
	}

	public button.MyButton getBtnChtra() {
		return btnChtra;
	}

	public void setBtnChtra(button.MyButton btnChtra) {
		this.btnChtra = btnChtra;
	}

	public button.MyButton getBtnDatra() {
		return btnDatra;
	}

	public void setBtnDatra(button.MyButton btnDatra) {
		this.btnDatra = btnDatra;
	}

	public javax.swing.JButton getBtnLuuS() {
		return btnLuuS;
	}

	public void setBtnLuuS(javax.swing.JButton btnLuuS) {
		this.btnLuuS = btnLuuS;
	}

	public javax.swing.JButton getBtnThemVaoPhieuMuon() {
		return btnThemVaoPhieuMuon;
	}

	public void setBtnThemVaoPhieuMuon(javax.swing.JButton btnThemVaoPhieuMuon) {
		this.btnThemVaoPhieuMuon = btnThemVaoPhieuMuon;
	}

	public button.MyButton getBtnXoaPMCT() {
		return btnXoaPMCT;
	}

	public void setBtnXoaPMCT(button.MyButton btnXoaPMCT) {
		this.btnXoaPMCT = btnXoaPMCT;
	}

	public javax.swing.JButton getBtnXoaS() {
		return btnXoaS;
	}

	public void setBtnXoaS(javax.swing.JButton btnXoaS) {
		this.btnXoaS = btnXoaS;
	}

	public javax.swing.ButtonGroup getButtonGroup1() {
		return buttonGroup1;
	}

	public void setButtonGroup1(javax.swing.ButtonGroup buttonGroup1) {
		this.buttonGroup1 = buttonGroup1;
	}

	public component.menu_1 getHeader() {
		return header;
	}

	public void setHeader(component.menu_1 header) {
		this.header = header;
	}

	public component.menu_1 getHeader1() {
		return header1;
	}

	public void setHeader1(component.menu_1 header1) {
		this.header1 = header1;
	}

	public javax.swing.JLabel getjLabel10() {
		return jLabel10;
	}

	public void setjLabel10(javax.swing.JLabel jLabel10) {
		this.jLabel10 = jLabel10;
	}

	public javax.swing.JLabel getjLabel11() {
		return jLabel11;
	}

	public void setjLabel11(javax.swing.JLabel jLabel11) {
		this.jLabel11 = jLabel11;
	}

	public javax.swing.JLabel getjLabel12() {
		return jLabel12;
	}

	public void setjLabel12(javax.swing.JLabel jLabel12) {
		this.jLabel12 = jLabel12;
	}

	public javax.swing.JLabel getjLabel13() {
		return jLabel13;
	}

	public void setjLabel13(javax.swing.JLabel jLabel13) {
		this.jLabel13 = jLabel13;
	}

	public javax.swing.JLabel getjLabel14() {
		return jLabel14;
	}

	public void setjLabel14(javax.swing.JLabel jLabel14) {
		this.jLabel14 = jLabel14;
	}

	public javax.swing.JLabel getjLabel15() {
		return jLabel15;
	}

	public void setjLabel15(javax.swing.JLabel jLabel15) {
		this.jLabel15 = jLabel15;
	}

	public javax.swing.JLabel getjLabel16() {
		return jLabel16;
	}

	public void setjLabel16(javax.swing.JLabel jLabel16) {
		this.jLabel16 = jLabel16;
	}

	public javax.swing.JLabel getjLabel7() {
		return jLabel7;
	}

	public void setjLabel7(javax.swing.JLabel jLabel7) {
		this.jLabel7 = jLabel7;
	}

	public javax.swing.JLabel getjLabel8() {
		return jLabel8;
	}

	public void setjLabel8(javax.swing.JLabel jLabel8) {
		this.jLabel8 = jLabel8;
	}

	public javax.swing.JLabel getjLabel9() {
		return jLabel9;
	}

	public void setjLabel9(javax.swing.JLabel jLabel9) {
		this.jLabel9 = jLabel9;
	}

	public javax.swing.JScrollPane getjScrollPane1() {
		return jScrollPane1;
	}

	public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
		this.jScrollPane1 = jScrollPane1;
	}

	public javax.swing.JScrollPane getjScrollPane2() {
		return jScrollPane2;
	}

	public void setjScrollPane2(javax.swing.JScrollPane jScrollPane2) {
		this.jScrollPane2 = jScrollPane2;
	}

	public javax.swing.JScrollPane getjScrollPane3() {
		return jScrollPane3;
	}

	public void setjScrollPane3(javax.swing.JScrollPane jScrollPane3) {
		this.jScrollPane3 = jScrollPane3;
	}

	public javax.swing.JScrollPane getjScrollPane4() {
		return jScrollPane4;
	}

	public void setjScrollPane4(javax.swing.JScrollPane jScrollPane4) {
		this.jScrollPane4 = jScrollPane4;
	}

	public javax.swing.JTabbedPane getjTabbedPane2() {
		return jTabbedPane2;
	}

	public void setjTabbedPane2(javax.swing.JTabbedPane jTabbedPane2) {
		this.jTabbedPane2 = jTabbedPane2;
	}

	public javax.swing.JLabel getLblDongHo() {
		return lblDongHo;
	}

	public void setLblDongHo(javax.swing.JLabel lblDongHo) {
		this.lblDongHo = lblDongHo;
	}

	public javax.swing.JLabel getLblDongHo1() {
		return lblDongHo1;
	}

	public void setLblDongHo1(javax.swing.JLabel lblDongHo1) {
		this.lblDongHo1 = lblDongHo1;
	}

	public javax.swing.JLabel getLblDongHo2() {
		return lblDongHo2;
	}

	public void setLblDongHo2(javax.swing.JLabel lblDongHo2) {
		this.lblDongHo2 = lblDongHo2;
	}

	public javax.swing.JLabel getLblMaS() {
		return lblMaS;
	}

	public void setLblMaS(javax.swing.JLabel lblMaS) {
		this.lblMaS = lblMaS;
	}

	public javax.swing.JLabel getLblPhieuMuon() {
		return lblPhieuMuon;
	}

	public void setLblPhieuMuon(javax.swing.JLabel lblPhieuMuon) {
		this.lblPhieuMuon = lblPhieuMuon;
	}

	public javax.swing.JLabel getLblPhieuMuon1() {
		return lblPhieuMuon1;
	}

	public void setLblPhieuMuon1(javax.swing.JLabel lblPhieuMuon1) {
		this.lblPhieuMuon1 = lblPhieuMuon1;
	}

	public javax.swing.JLabel getLblSoLuong() {
		return lblSoLuong;
	}

	public void setLblSoLuong(javax.swing.JLabel lblSoLuong) {
		this.lblSoLuong = lblSoLuong;
	}

	public javax.swing.JLabel getLblmadocgia() {
		return lblmadocgia;
	}

	public void setLblmadocgia(javax.swing.JLabel lblmadocgia) {
		this.lblmadocgia = lblmadocgia;
	}

	public javax.swing.JLabel getLblmanhanvien() {
		return lblmanhanvien;
	}

	public void setLblmanhanvien(javax.swing.JLabel lblmanhanvien) {
		this.lblmanhanvien = lblmanhanvien;
	}

	public javax.swing.JLabel getLblngaytao() {
		return lblngaytao;
	}

	public void setLblngaytao(javax.swing.JLabel lblngaytao) {
		this.lblngaytao = lblngaytao;
	}

	public javax.swing.JLabel getLblngaytra() {
		return lblngaytra;
	}

	public void setLblngaytra(javax.swing.JLabel lblngaytra) {
		this.lblngaytra = lblngaytra;
	}

	public javax.swing.JLabel getLblpm() {
		return lblpm;
	}

	public void setLblpm(javax.swing.JLabel lblpm) {
		this.lblpm = lblpm;
	}

	public javax.swing.JLabel getLblpm1() {
		return lblpm1;
	}

	public void setLblpm1(javax.swing.JLabel lblpm1) {
		this.lblpm1 = lblpm1;
	}

	public javax.swing.JPanel getMain() {
		return main;
	}

	public void setMain(javax.swing.JPanel main) {
		this.main = main;
	}

	public javax.swing.JPanel getMain1() {
		return main1;
	}

	public void setMain1(javax.swing.JPanel main1) {
		this.main1 = main1;
	}

	public javax.swing.JPanel getMain2() {
		return main2;
	}

	public void setMain2(javax.swing.JPanel main2) {
		this.main2 = main2;
	}

	public button.MyButton getMyButton1() {
		return myButton1;
	}

	public void setMyButton1(button.MyButton myButton1) {
		this.myButton1 = myButton1;
	}

	public button.MyButton getMyButton10() {
		return myButton10;
	}

	public void setMyButton10(button.MyButton myButton10) {
		this.myButton10 = myButton10;
	}

	public button.MyButton getMyButton11() {
		return myButton11;
	}

	public void setMyButton11(button.MyButton myButton11) {
		this.myButton11 = myButton11;
	}

	public button.MyButton getMyButton13() {
		return myButton13;
	}

	public void setMyButton13(button.MyButton myButton13) {
		this.myButton13 = myButton13;
	}

	public button.MyButton getMyButton14() {
		return myButton14;
	}

	public void setMyButton14(button.MyButton myButton14) {
		this.myButton14 = myButton14;
	}

	public button.MyButton getMyButton15() {
		return myButton15;
	}

	public void setMyButton15(button.MyButton myButton15) {
		this.myButton15 = myButton15;
	}

	public button.MyButton getMyButton16() {
		return myButton16;
	}

	public void setMyButton16(button.MyButton myButton16) {
		this.myButton16 = myButton16;
	}

	public button.MyButton getMyButton17() {
		return myButton17;
	}

	public void setMyButton17(button.MyButton myButton17) {
		this.myButton17 = myButton17;
	}

	public button.MyButton getMyButton18() {
		return myButton18;
	}

	public void setMyButton18(button.MyButton myButton18) {
		this.myButton18 = myButton18;
	}

	public button.MyButton getMyButton3() {
		return myButton3;
	}

	public void setMyButton3(button.MyButton myButton3) {
		this.myButton3 = myButton3;
	}

	public button.MyButton getMyButton4() {
		return myButton4;
	}

	public void setMyButton4(button.MyButton myButton4) {
		this.myButton4 = myButton4;
	}

	public button.MyButton getMyButton5() {
		return myButton5;
	}

	public void setMyButton5(button.MyButton myButton5) {
		this.myButton5 = myButton5;
	}

	public button.MyButton getMyButton6() {
		return myButton6;
	}

	public void setMyButton6(button.MyButton myButton6) {
		this.myButton6 = myButton6;
	}

	public button.MyButton getMyButton7() {
		return myButton7;
	}

	public void setMyButton7(button.MyButton myButton7) {
		this.myButton7 = myButton7;
	}

	public button.MyButton getMyButton8() {
		return myButton8;
	}

	public void setMyButton8(button.MyButton myButton8) {
		this.myButton8 = myButton8;
	}

	public button.MyButton getMyButton9() {
		return myButton9;
	}

	public void setMyButton9(button.MyButton myButton9) {
		this.myButton9 = myButton9;
	}

	public javax.swing.JRadioButton getRdoChuaTra() {
		return rdoChuaTra;
	}

	public void setRdoChuaTra(javax.swing.JRadioButton rdoChuaTra) {
		this.rdoChuaTra = rdoChuaTra;
	}

	public javax.swing.JRadioButton getRdoDaTra() {
		return rdoDaTra;
	}

	public void setRdoDaTra(javax.swing.JRadioButton rdoDaTra) {
		this.rdoDaTra = rdoDaTra;
	}

	public javax.swing.JTabbedPane getTab() {
		return tab;
	}

	public void setTab(javax.swing.JTabbedPane tab) {
		this.tab = tab;
	}

	public javax.swing.JTable getTblPhieuMuon() {
		return tblPhieuMuon;
	}

	public void setTblPhieuMuon(javax.swing.JTable tblPhieuMuon) {
		this.tblPhieuMuon = tblPhieuMuon;
	}

	public javax.swing.JTable getTblPhieuMuonCT() {
		return tblPhieuMuonCT;
	}

	public void setTblPhieuMuonCT(javax.swing.JTable tblPhieuMuonCT) {
		this.tblPhieuMuonCT = tblPhieuMuonCT;
	}

	public javax.swing.JTable getTblSach() {
		return tblSach;
	}

	public void setTblSach(javax.swing.JTable tblSach) {
		this.tblSach = tblSach;
	}

	public javax.swing.JTable getTblSach2() {
		return tblSach2;
	}

	public void setTblSach2(javax.swing.JTable tblSach2) {
		this.tblSach2 = tblSach2;
	}

	public button.textfield.TextField getTxtGhiChu() {
		return txtGhiChu;
	}

	public void setTxtGhiChu(button.textfield.TextField txtGhiChu) {
		this.txtGhiChu = txtGhiChu;
	}

	public button.textfield.TextField getTxtMaDocGia() {
		return txtMaDocGia;
	}

	public void setTxtMaDocGia(button.textfield.TextField txtMaDocGia) {
		this.txtMaDocGia = txtMaDocGia;
	}

	public button.textfield.TextField getTxtMaNV() {
		return txtMaNV;
	}

	public void setTxtMaNV(button.textfield.TextField txtMaNV) {
		this.txtMaNV = txtMaNV;
	}

	public button.textfield.TextField getTxtMaPM() {
		return txtMaPM;
	}

	public void setTxtMaPM(button.textfield.TextField txtMaPM) {
		this.txtMaPM = txtMaPM;
	}

	public button.textfield.TextField getTxtMaPM1() {
		return txtMaPM1;
	}

	public void setTxtMaPM1(button.textfield.TextField txtMaPM1) {
		this.txtMaPM1 = txtMaPM1;
	}

	public button.textfield.TextField getTxtMaSach() {
		return txtMaSach;
	}

	public void setTxtMaSach(button.textfield.TextField txtMaSach) {
		this.txtMaSach = txtMaSach;
	}

	public button.textfield.TextField getTxtSoLuong() {
		return txtSoLuong;
	}

	public void setTxtSoLuong(button.textfield.TextField txtSoLuong) {
		this.txtSoLuong = txtSoLuong;
	}

	public button.textfield.TextField getTxtTimKiem() {
		return txtTimKiem;
	}

	public void setTxtTimKiem(button.textfield.TextField txtTimKiem) {
		this.txtTimKiem = txtTimKiem;
	}

	public String getMes() {
		return Mes;
	}

	public void setMes(String mes) {
		Mes = mes;
	}
    
    

}
